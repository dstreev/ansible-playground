{
  "configurations": [
 {
    "hdfs-site": {
      "properties_attributes": {},
      "properties": {
        "dfs.datanode.data.dir": "/hadoop/hdfs/data",
        "dfs.journalnode.edits.dir": "/hadoop/hdfs/journalnode",
        "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
        "dfs.namenode.name.dir": "/hadoop/hdfs/namenode",
      }
    }
  }, {
    "yarn-site": {
      "properties_attributes": {},
      "properties": {
        "hadoop.registry.dns.bind-port": "1053",
        "hadoop.registry.dns.domain-name": "HWX.COM",
        "hadoop.registry.dns.enabled": "true",
        "hadoop.registry.dns.zone-mask": "255.255.255.0",
        "hadoop.registry.dns.zone-subnet": "172.17.0.0",
        "yarn.nodemanager.local-dirs": "/hadoop/yarn/local",
        "yarn.nodemanager.log-dirs": "/hadoop/yarn/log",
        "yarn.timeline-service.leveldb-state-store.path": "/hadoop/yarn/timeline",
        "yarn.timeline-service.leveldb-timeline-store.path": "/hadoop/yarn/timeline",
      }
    }
  }, {
    "mapred-site": {
      "properties_attributes": {},
      "properties": {
        "mapred.local.dir": "/hadoop/mapred,/var/log/hadoop/mapred",
        "mapreduce.jobhistory.recovery.store.leveldb.path": "/hadoop/mapreduce/jhs",
      }
    }
  }, {
    "hive-env": {
      "properties_attributes": {},
      "properties": {
        "hive_ambari_database": "MySQL",
        "hive_database": "Existing MySQL / MariaDB Database"
      }
    }
  }, {
    "hive-site": {
      "properties_attributes": {},
      "properties": {
        "ambari.hive.db.schema.name": "hive_{{ env_instance }}",
        "hive.metastore.db.type": "{{hive_metastore_db_type}}",
        "hive.cluster.delegation.token.store.zookeeper.znode": "/hive/cluster/delegation",
        "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
        "javax.jdo.option.ConnectionPassword": "hortonworks",
        "javax.jdo.option.ConnectionURL": "jdbc:mysql://db.hwx/hive_{{ env_instance }}",
        "javax.jdo.option.ConnectionUserName": "root",
        "metastore.create.as.acid": "true"
      }
    }
  }, {
    "oozie-site": {
      "properties_attributes": {},
      "properties": {
        "oozie.db.schema.name": "oozie_{{ env_instance }}",
        "oozie.service.JPAService.create.db.schema": "false",
        "oozie.service.JPAService.jdbc.driver": "com.mysql.jdbc.Driver",
        "oozie.service.JPAService.jdbc.password": "hortonworks",
        "oozie.service.JPAService.jdbc.url": "jdbc:mysql://db.hwx/oozie_{{ env_instance }}",
        "oozie.service.JPAService.jdbc.username": "root",
      }
    }
  }, {
    "infra-solr-env": {
      "properties_attributes": {},
      "properties": {
        "infra_solr_datadir": "/hadoop/ambari-infra-solr/data",
      }
    }
  }, {
    "ams-grafana-env": {
      "properties_attributes": {},
      "properties": {
        "metrics_grafana_data_dir": "/hadoop/ambari-metrics-grafana",
        "metrics_grafana_password": "hortonworks",
        "metrics_grafana_username": "admin"
      }
    }
  }, {
    "ams-site": {
      "properties_attributes": {},
      "properties": {
        "timeline.metrics.aggregator.checkpoint.dir": "/hadoop/ambari-metrics-collector/checkpoint"
      }
    }
  }, {
    "atlas-env": {
      "properties_attributes": {},
      "properties": {
        "atlas.admin.username": "admin",
        "metadata_data_dir": "/hadoop/atlas/data"
      }
    }
  }, {
    "admin-properties": {
      "properties_attributes": {},
      "properties": {
        "DB_FLAVOR": "MYSQL",
        "SQL_CONNECTOR_JAR": "{{driver_curl_target}}",
        "db_host": "db.hwx",
        "db_name": "ranger_{{ env_instance }}",
        "db_password": "hortonworks",
        "db_root_password": "",
        "db_root_user": "root",
        "db_user": "root"
      }
    }
  }, {
    "ranger-admin-site": {
      "properties_attributes": {},
      "properties": {
        "ranger.admin.kerberos.cookie.domain": "{{ranger_host}}",
        "ranger.admin.kerberos.cookie.path": "/",
        "ranger.admin.kerberos.keytab": "",
        "ranger.admin.kerberos.principal": "",
        "ranger.admin.kerberos.token.valid.seconds": "30",
        "ranger.audit.solr.password": "NONE",
        "ranger.audit.solr.urls": "",
        "ranger.audit.solr.username": "ranger_solr",
        "ranger.audit.solr.zookeepers": "os05-14.hwx:2181,os06-14.hwx:2181,os07-14.hwx:2181/infra-solr",
        "ranger.audit.source.type": "solr",
        "ranger.authentication.method": "UNIX",
        "ranger.credential.provider.path": "/etc/ranger/admin/rangeradmin.jceks",
        "ranger.externalurl": "{{ranger_external_url}}",
        "ranger.https.attrib.keystore.file": "/etc/security/serverKeys/ranger-admin-keystore.jks",
        "ranger.is.solr.kerberised": "{{ranger_is_solr_kerberised}}",
        "ranger.jpa.jdbc.credential.alias": "rangeradmin",
        "ranger.jpa.jdbc.dialect": "{{jdbc_dialect}}",
        "ranger.jpa.jdbc.driver": "com.mysql.jdbc.Driver",
        "ranger.jpa.jdbc.password": "_",
        "ranger.jpa.jdbc.url": "jdbc:mysql://db.hwx:3306/ranger_{{ env_instance }}",
        "ranger.jpa.jdbc.user": "{{ranger_db_user}}",
        "ranger.kms.service.user.hdfs": "hdfs",
        "ranger.kms.service.user.hive": "hive",
        "ranger.ldap.ad.base.dn": "dc=example,dc=com",
        "ranger.ldap.ad.bind.dn": "{{ranger_ug_ldap_bind_dn}}",
        "ranger.ldap.ad.bind.password": "",
        "ranger.ldap.ad.binddn.credential.alias": "ranger.ldap.ad.bind.password",
        "ranger.ldap.ad.domain": "",
        "ranger.ldap.ad.referral": "ignore",
        "ranger.ldap.ad.url": "{{ranger_ug_ldap_url}}",
        "ranger.ldap.ad.user.searchfilter": "(sAMAccountName={0})",
        "ranger.ldap.base.dn": "dc=example,dc=com",
        "ranger.ldap.bind.dn": "{{ranger_ug_ldap_bind_dn}}",
        "ranger.ldap.bind.password": "",
        "ranger.ldap.binddn.credential.alias": "ranger.ldap.bind.password",
        "ranger.ldap.group.roleattribute": "cn",
        "ranger.ldap.group.searchbase": "{{ranger_ug_ldap_group_searchbase}}",
        "ranger.ldap.group.searchfilter": "{{ranger_ug_ldap_group_searchfilter}}",
        "ranger.ldap.referral": "ignore",
        "ranger.ldap.starttls": "false",
        "ranger.ldap.url": "{{ranger_ug_ldap_url}}",
        "ranger.ldap.user.dnpattern": "uid={0},ou=users,dc=xasecure,dc=net",
        "ranger.ldap.user.searchfilter": "(uid={0})",
        "ranger.lookup.kerberos.keytab": "",
        "ranger.lookup.kerberos.principal": "",
        "ranger.plugins.atlas.serviceuser": "atlas",
        "ranger.plugins.hbase.serviceuser": "hbase",
        "ranger.plugins.hdfs.serviceuser": "hdfs",
        "ranger.plugins.hive.serviceuser": "hive",
        "ranger.plugins.kafka.serviceuser": "kafka",
        "ranger.plugins.kms.serviceuser": "kms",
        "ranger.plugins.knox.serviceuser": "knox",
        "ranger.plugins.storm.serviceuser": "storm",
        "ranger.plugins.yarn.serviceuser": "yarn",
        "ranger.service.host": "{{ranger_host}}",
        "ranger.service.http.enabled": "true",
        "ranger.service.http.port": "6080",
        "ranger.service.https.attrib.clientAuth": "want",
        "ranger.service.https.attrib.keystore.credential.alias": "keyStoreCredentialAlias",
        "ranger.service.https.attrib.keystore.keyalias": "rangeradmin",
        "ranger.service.https.attrib.keystore.pass": "xasecure",
        "ranger.service.https.attrib.ssl.enabled": "false",
        "ranger.service.https.port": "6182",
        "ranger.spnego.kerberos.keytab": "",
        "ranger.spnego.kerberos.principal": "*",
        "ranger.sso.browser.useragent": "Mozilla,chrome",
        "ranger.sso.enabled": "false",
        "ranger.sso.providerurl": "https://os07-14.hwx:8443/gateway/knoxsso/api/v1/websso",
        "ranger.sso.publicKey": "",
        "ranger.truststore.alias": "trustStoreAlias",
        "ranger.truststore.file": "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
        "ranger.truststore.password": "changeit",
        "ranger.unixauth.remote.login.enabled": "true",
        "ranger.unixauth.service.hostname": "{{ugsync_host}}",
        "ranger.unixauth.service.port": "5151"
      }
    }
  }, {
    "ranger-env": {
      "properties_attributes": {},
      "properties": {
        "admin_password": "hortonworks44",
        "admin_username": "admin",
        "content": "#!/bin/bash\n\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Set Ranger-specific environment variables here.\nexport JAVA_HOME={{java_home}}\n\n{% if is_ranger_admin_host  %}\n# Ranger Admin specific environment variables here.\nexport RANGER_ADMIN_LOG_DIR={{admin_log_dir}}\nexport RANGER_PID_DIR_PATH={{ranger_pid_dir}}\nexport RANGER_USER={{unix_user}}\n{% if security_enabled %}\nexport JAVA_OPTS=\" ${JAVA_OPTS} -Dzookeeper.sasl.client.username={{zookeeper_principal_primary}} \"\n{% endif %}\n{% endif %}\n\n{% if is_ranger_usersync_host  %}\n# Ranger Usersync specific environment variables here.\nexport USERSYNC_CONF_DIR={{ranger_ugsync_conf}}\nexport logdir={{usersync_log_dir}}\nexport USERSYNC_PID_DIR_PATH={{ranger_pid_dir}}\nexport UNIX_USERSYNC_USER={{unix_user}}\n{% endif %}\n\n{% if is_ranger_tagsync_host  %}\n# Ranger Tagsync specific environment variables here.\nexport RANGER_TAGSYNC_LOG_DIR={{tagsync_log_dir}}\nexport TAGSYNC_PID_DIR_PATH={{ranger_pid_dir}}\nexport UNIX_TAGSYNC_USER={{unix_user}}\n{% endif %}",
        "create_db_dbuser": "false",
        "is_external_solrCloud_enabled": "false",
        "is_external_solrCloud_kerberos": "false",
        "is_nested_groupsync_enabled": "false",
        "is_solrCloud_enabled": "true",
        "keyadmin_user_password": "hortonworks44",
        "ranger-atlas-plugin-enabled": "Yes",
        "ranger-hbase-plugin-enabled": "Yes",
        "ranger-hdfs-plugin-enabled": "Yes",
        "ranger-hive-plugin-enabled": "Yes",
        "ranger-kafka-plugin-enabled": "No",
        "ranger-knox-plugin-enabled": "Yes",
        "ranger-nifi-plugin-enabled": "No",
        "ranger-storm-plugin-enabled": "No",
        "ranger-yarn-plugin-enabled": "Yes",
        "ranger_admin_log_dir": "/var/log/ranger/admin",
        "ranger_admin_password": "hortonworks44",
        "ranger_admin_username": "amb_ranger_admin",
        "ranger_pid_dir": "/var/run/ranger",
        "ranger_privelege_user_jdbc_url": "jdbc:mysql://db.hwx:3306",
        "ranger_solr_collection_name": "ranger_audits",
        "ranger_solr_config_set": "ranger_audits",
        "ranger_solr_replication_factor": "1",
        "ranger_solr_shards": "1",
        "ranger_usersync_log_dir": "/var/log/ranger/usersync",
        "rangertagsync_user_password": "hortonworks44",
        "rangerusersync_user_password": "hortonworks44",
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.dir": "hdfs://os02-14.hwx:8020/ranger/audit",
        "xasecure.audit.destination.solr": "true",
        "xml_configurations_supported": "true",
        "test_db_connection": "",
        "test_root_db_connection": "",
        "ranger_group": "ranger",
        "ranger_user": "ranger"
      }
    }
  }, {
    "ranger-solr-configuration": {
      "properties_attributes": {},
      "properties": {
        "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>6.6.2</luceneMatchVersion>\n\n  <!-- <lib/> directives can be used to instruct Solr to load any Jars\n       identified and use them to resolve any \"plugins\" specified in\n       your solrconfig.xml or schema.xml (ie: Analyzers, Request\n       Handlers, etc...).\n\n       All directories and paths are resolved relative to the\n       instanceDir.\n\n       Please note that <lib/> directives are processed in the order\n       that they appear in your solrconfig.xml file, and are \"stacked\"\n       on top of each other when building a ClassLoader - so if you have\n       plugin jars with dependencies on other jars, the \"lower level\"\n       dependency jars should be loaded first.\n\n       If a \"./lib\" directory exists in your instanceDir, all files\n       found in it are included as if you had used the following\n       syntax...\n\n              <lib dir=\"./lib\" />\n    -->\n\n  <!-- A 'dir' option by itself adds any files found in the directory\n       to the classpath, this is useful for including all jars in a\n       directory.\n\n       When a 'regex' is specified in addition to a 'dir', only the\n       files in that directory which completely match the regex\n       (anchored on both ends) will be included.\n\n       If a 'dir' option (with or without a regex) is used and nothing\n       is found that matches, a warning will be logged.\n\n       The examples below can be used to load some solr-contribs along\n       with their external dependencies.\n    -->\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-dataimporthandler-.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/extraction/lib\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-cell-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/clustering/lib/\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-clustering-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/langid/lib/\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-langid-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/velocity/lib\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-velocity-\\d.*\\.jar\" />\n\n  <!-- an exact 'path' can be used instead of a 'dir' to specify a\n       specific jar file.  This will cause a serious error to be logged\n       if it can't be loaded.\n    -->\n  <!--\n     <lib path=\"../a-jar-that-does-not-exist.jar\" />\n  -->\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n\n\n    <!-- These will be used if you are using the solr.HdfsDirectoryFactory,\n         otherwise they will be ignored. If you don't plan on using hdfs,\n         you can safely remove this section. -->\n    <!-- The root directory that collection data should be written to. -->\n    <str name=\"solr.hdfs.home\">${solr.hdfs.home:}</str>\n    <!-- The hadoop configuration files to use for the hdfs client. -->\n    <str name=\"solr.hdfs.confdir\">${solr.hdfs.confdir:}</str>\n    <!-- Enable/Disable the hdfs cache. -->\n    <str name=\"solr.hdfs.blockcache.enabled\">${solr.hdfs.blockcache.enabled:true}</str>\n    <!-- Enable/Disable using one global cache for all SolrCores.\n         The settings used will be from the first HdfsDirectoryFactory created. -->\n    <str name=\"solr.hdfs.blockcache.global\">${solr.hdfs.blockcache.global:true}</str>\n\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To enable dynamic schema REST APIs, use the following for <schemaFactory>: -->\n\n       <schemaFactory class=\"ManagedIndexSchemaFactory\">\n         <bool name=\"mutable\">true</bool>\n         <str name=\"managedSchemaResourceName\">managed-schema</str>\n       </schemaFactory>\n<!--\n       When ManagedIndexSchemaFactory is specified, Solr will load the schema from\n       the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n       Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n       schema does not exist, Solr will create it after reading schema.xml, then rename\n       'schema.xml' to 'schema.xml.bak'.\n\n       Do NOT hand edit the managed schema - external modifications will be ignored and\n       overwritten as a result of schema modification REST API calls.\n\n       When ManagedIndexSchemaFactory is specified with mutable = true, schema\n       modification REST API calls will be allowed; otherwise, error responses will be\n       sent back for these requests.\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n\n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n    <!-- maxFieldLength was removed in 4.0. To get similar behavior, include a\n         LimitTokenCountFilterFactory in your fieldType definition. E.g.\n     <filter class=\"solr.LimitTokenCountFilterFactory\" maxTokenCount=\"10000\"/>\n    -->\n    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->\n    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->\n\n    <!-- The maximum number of simultaneous threads that may be\n         indexing documents at once in IndexWriter; if more than this\n         many threads arrive they will wait for others to finish.\n         Default in Solr/Lucene is 8. -->\n    <!-- <maxIndexingThreads>8</maxIndexingThreads>  -->\n\n    <!-- Expert: Enabling compound file will use less files for the index,\n         using fewer file descriptors on the expense of performance decrease.\n         Default in Lucene is \"true\". Default in Solr is \"false\" (since 3.6) -->\n    <!-- <useCompoundFile>false</useCompoundFile> -->\n\n    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene\n         indexing for buffering added documents and deletions before they are\n         flushed to the Directory.\n         maxBufferedDocs sets a limit on the number of documents buffered\n         before flushing.\n         If both ramBufferSizeMB and maxBufferedDocs is set, then\n         Lucene will flush based on whichever limit is hit first.\n         The default is 100 MB.  -->\n    <!-- <ramBufferSizeMB>100</ramBufferSizeMB> -->\n    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->\n\n    <!-- Expert: Merge Policy\n         The Merge Policy in Lucene controls how merging of segments is done.\n         The default since Solr/Lucene 3.3 is TieredMergePolicy.\n         The default since Lucene 2.3 was the LogByteSizeMergePolicy,\n         Even older versions of Lucene used LogDocMergePolicy.\n      -->\n    <!--\n        <mergePolicy class=\"org.apache.lucene.index.TieredMergePolicy\">\n          <int name=\"maxMergeAtOnce\">10</int>\n          <int name=\"segmentsPerTier\">10</int>\n        </mergePolicy>\n      -->\n\n    <!-- Merge Factor\n         The merge factor controls how many segments will get merged at a time.\n         For TieredMergePolicy, mergeFactor is a convenience parameter which\n         will set both MaxMergeAtOnce and SegmentsPerTier at once.\n         For LogByteSizeMergePolicy, mergeFactor decides how many new segments\n         will be allowed before they are merged into one.\n         Default is 10 for both merge policies.\n      -->\n    <!--\n    <mergeFactor>10</mergeFactor>\n      -->\n\n    <!-- Ranger customization. Set to 5 to trigger purging of deleted documents more often -->\n    <mergePolicyFactory class=\"org.apache.solr.index.TieredMergePolicyFactory\">\n      <int name=\"maxMergeAtOnce\">{{ranger_audit_logs_merge_factor}}</int>\n      <int name=\"segmentsPerTier\">{{ranger_audit_logs_merge_factor}}</int>\n    </mergePolicyFactory>\n\n    <!-- Expert: Merge Scheduler\n         The Merge Scheduler in Lucene controls how merges are\n         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)\n         can perform merges in the background using separate threads.\n         The SerialMergeScheduler (Lucene 2.2 default) does not.\n     -->\n    <!--\n       <mergeScheduler class=\"org.apache.lucene.index.ConcurrentMergeScheduler\"/>\n       -->\n\n    <!-- LockFactory\n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n\n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Unlock On Startup\n\n         If true, unlock any held write or commit locks on startup.\n         This defeats the locking mechanism that allows multiple\n         processes to safely access a lucene index, and should be used\n         with care. Default is \"false\".\n\n         This is not needed if lock type is 'single'\n     -->\n    <!--\n    <unlockOnStartup>false</unlockOnStartup>\n      -->\n\n    <!-- Commit Deletion Policy\n         Custom deletion policies can be specified here. The class must\n         implement org.apache.lucene.index.IndexDeletionPolicy.\n\n         The default Solr IndexDeletionPolicy implementation supports\n         deleting index commit points on number of commits, age of\n         commit point and optimized status.\n\n         The latest commit point should always be preserved regardless\n         of the criteria.\n    -->\n    <!--\n    <deletionPolicy class=\"solr.SolrDeletionPolicy\">\n    -->\n      <!-- The number of commit points to be kept -->\n      <!-- <str name=\"maxCommitsToKeep\">1</str> -->\n      <!-- The number of optimized commit points to be kept -->\n      <!-- <str name=\"maxOptimizedCommitsToKeep\">0</str> -->\n      <!--\n          Delete all commit points once they have reached the given age.\n          Supports DateMathParser syntax e.g.\n        -->\n      <!--\n         <str name=\"maxCommitAge\">30MINUTES</str>\n         <str name=\"maxCommitAge\">1DAY</str>\n      -->\n    <!--\n    </deletionPolicy>\n    -->\n\n    <!-- Lucene Infostream\n\n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n     <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId\n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.  -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n\n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents.\n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit.\n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n     <autoCommit>\n       <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n       <openSearcher>false</openSearcher>\n     </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n\n     <autoSoftCommit>\n       <maxTime>${solr.autoSoftCommit.maxTime:5000}</maxTime>\n     </autoSoftCommit>\n\n    <!-- Update Related Event Listeners\n\n         Various IndexWriter related events can trigger Listeners to\n         take actions.\n\n         postCommit - fired after every commit or optimize command\n         postOptimize - fired after every optimize command\n      -->\n    <!-- The RunExecutableListener executes an external command from a\n         hook such as postCommit or postOptimize.\n\n         exe - the name of the executable to run\n         dir - dir to use as the current working directory. (default=\".\")\n         wait - the calling thread waits until the executable returns.\n                (default=\"true\")\n         args - the arguments to pass to the program.  (default is none)\n         env - environment variables to set.  (default is none)\n      -->\n    <!-- This example shows how RunExecutableListener could be used\n         with the script based replication...\n         http://wiki.apache.org/solr/CollectionDistribution\n      -->\n    <!--\n       <listener event=\"postCommit\" class=\"solr.RunExecutableListener\">\n         <str name=\"exe\">solr/bin/snapshooter</str>\n         <str name=\"dir\">.</str>\n         <bool name=\"wait\">true</bool>\n         <arr name=\"args\"> <str>arg1</str> <str>arg2</str> </arr>\n         <arr name=\"env\"> <str>MYVAR=val1</str> </arr>\n       </listener>\n      -->\n\n  </updateHandler>\n\n  <!-- IndexReaderFactory\n\n       Use the following format to specify a custom IndexReaderFactory,\n       which allows for alternate IndexReader implementations.\n\n       ** Experimental Feature **\n\n       Please note - Using a custom IndexReaderFactory may prevent\n       certain other features from working. The API to\n       IndexReaderFactory may change without warning or may even be\n       removed from future releases if the problems cannot be\n       resolved.\n\n\n       ** Features that may not work with custom IndexReaderFactory **\n\n       The ReplicationHandler assumes a disk-resident index. Using a\n       custom IndexReader implementation may cause incompatibility\n       with ReplicationHandler and may cause replication to not work\n       correctly. See SOLR-1366 for details.\n\n    -->\n  <!--\n  <indexReaderFactory name=\"IndexReaderFactory\" class=\"package.class\">\n    <str name=\"someArg\">Some Value</str>\n  </indexReaderFactory >\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n\n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n\n      -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.\n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.\n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n         Caches results of searches - ordered lists of document ids\n         (DocList) based on a query, a sort, and the range of documents requested.\n      -->\n    <queryResultCache class=\"solr.LRUCache\"\n                     size=\"512\"\n                     initialSize=\"512\"\n                     autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.\n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n      class=\"solr.search.LRUCache\"\n      size=\"10\"\n      initialSize=\"0\"\n      autowarmCount=\"10\"\n      regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Field Value Cache\n\n         Cache used to hold field values that are quickly accessible\n         by document id.  The fieldValueCache is created by default\n         even if not configured here.\n      -->\n    <!--\n       <fieldValueCache class=\"solr.FastLRUCache\"\n                        size=\"512\"\n                        autowarmCount=\"128\"\n                        showItems=\"32\" />\n      -->\n\n    <!-- Custom Cache\n\n         Example of a generic cache.  These caches may be accessed by\n         name through SolrIndexSearcher.getCache(),cacheLookup(), and\n         cacheInsert().  The purpose is to enable easy caching of\n         user/application level data.  The regenerator argument should\n         be specified as an implementation of solr.CacheRegenerator\n         if autowarming is desired.\n      -->\n    <!--\n       <cache name=\"myUserCache\"\n              class=\"solr.LRUCache\"\n              size=\"4096\"\n              initialSize=\"1024\"\n              autowarmCount=\"1024\"\n              regenerator=\"com.mycompany.MyRegenerator\"\n              />\n      -->\n\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n   <!-- Use Filter For Sorted Query\n\n        A possible optimization that attempts to use a filter to\n        satisfy a search.  If the requested sort does not include\n        score, then the filterCache will be checked for a filter\n        matching the query. If found, the filter will be used as the\n        source of document ids, and then the sort will be applied to\n        that.\n\n        For most situations, this will not be useful unless you\n        frequently get the same search repeatedly with different sort\n        options, and none of them ever use \"score\"\n     -->\n   <!--\n      <useFilterForSortedQuery>true</useFilterForSortedQuery>\n     -->\n\n   <!-- Result Window Size\n\n        An optimization for use with the queryResultCache.  When a search\n        is requested, a superset of the requested number of document ids\n        are collected.  For example, if a search for a particular query\n        requests matching documents 10 through 19, and queryWindowSize is 50,\n        then documents 0 through 49 will be collected and cached.  Any further\n        requests in that range can be satisfied via the cache.\n     -->\n   <queryResultWindowSize>20</queryResultWindowSize>\n\n   <!-- Maximum number of documents to cache for any entry in the\n        queryResultCache.\n     -->\n   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n   <!-- Query Related Event Listeners\n\n        Various IndexSearcher related events can trigger Listeners to\n        take actions.\n\n        newSearcher - fired whenever a new searcher is being prepared\n        and there is a current searcher handling requests (aka\n        registered).  It can be used to prime certain caches to\n        prevent long request times for certain requests.\n\n        firstSearcher - fired whenever a new searcher is being\n        prepared but there is no current registered searcher to handle\n        requests or to gain autowarming data from.\n\n\n     -->\n    <!-- QuerySenderListener takes an array of NamedList and executes a\n         local query request for each NamedList in sequence.\n      -->\n    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <!--\n           <lst><str name=\"q\">solr</str><str name=\"sort\">price asc</str></lst>\n           <lst><str name=\"q\">rocks</str><str name=\"sort\">weight asc</str></lst>\n          -->\n      </arr>\n    </listener>\n    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <lst>\n          <str name=\"q\">static firstSearcher warming in solrconfig.xml</str>\n        </lst>\n      </arr>\n    </listener>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>true</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the\n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n\n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n\n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the\n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom\n         plugins.\n\n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n    <!-- If you include a <cacheControl> directive, it will be used to\n         generate a Cache-Control header (as well as an Expires header\n         if the value contains \"max-age=\")\n\n         By default, no Cache-Control header is generated.\n\n         You can use the <cacheControl> option even if you have set\n         never304=\"true\"\n      -->\n    <!--\n       <httpCaching never304=\"true\" >\n         <cacheControl>max-age=30, public</cacheControl>\n       </httpCaching>\n      -->\n    <!-- To enable Solr to respond with automatically generated HTTP\n         Caching headers, and to response to Cache Validation requests\n         correctly, set the value of never304=\"false\"\n\n         This will cause Solr to generate Last-Modified and ETag\n         headers based on the properties of the Index.\n\n         The following options can also be specified to affect the\n         values of these headers...\n\n         lastModFrom - the default value is \"openTime\" which means the\n         Last-Modified value (and validation against If-Modified-Since\n         requests) will all be relative to when the current Searcher\n         was opened.  You can change it to lastModFrom=\"dirLastMod\" if\n         you want the value to exactly correspond to when the physical\n         index was last modified.\n\n         etagSeed=\"...\" is an option you can change to force the ETag\n         header (and validation against If-None-Match requests) to be\n         different even if the index has not changed (ie: when making\n         significant changes to your config file)\n\n         (lastModifiedFrom and etagSeed are both ignored if you use\n         the never304=\"true\" option)\n      -->\n    <!--\n       <httpCaching lastModifiedFrom=\"openTime\"\n                    etagSeed=\"Solr\">\n         <cacheControl>max-age=30, public</cacheControl>\n       </httpCaching>\n      -->\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n\n  <requestHandler name=\"/dataimport\" class=\"solr.DataImportHandler\">\n    <lst name=\"defaults\">\n      <str name=\"config\">solr-data-config.xml</str>\n    </lst>\n  </requestHandler>\n\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <int name=\"rows\">10</int>\n       <str name=\"df\">text</str>\n     </lst>\n    <!-- In addition to defaults, \"appends\" params can be specified\n         to identify values which should be appended to the list of\n         multi-val params from the query (or the existing \"defaults\").\n      -->\n    <!-- In this example, the param \"fq=instock:true\" would be appended to\n         any query time fq params the user may specify, as a mechanism for\n         partitioning the index, independent of any user selected filtering\n         that may also be desired (perhaps as a result of faceted searching).\n\n         NOTE: there is *absolutely* nothing a client can do to prevent these\n         \"appends\" values from being used, so don't use this mechanism\n         unless you are sure you always want it.\n      -->\n    <!--\n       <lst name=\"appends\">\n         <str name=\"fq\">inStock:true</str>\n       </lst>\n      -->\n    <!-- \"invariants\" are a way of letting the Solr maintainer lock down\n         the options available to Solr clients.  Any params values\n         specified here are used regardless of what values may be specified\n         in either the query, the \"defaults\", or the \"appends\" params.\n\n         In this example, the facet.field and facet.query params would\n         be fixed, limiting the facets clients can use.  Faceting is\n         not turned on by default - but if the client does specify\n         facet=true in the request, these are the only facets they\n         will be able to see counts for; regardless of what other\n         facet.field or facet.query params they may specify.\n\n         NOTE: there is *absolutely* nothing a client can do to prevent these\n         \"invariants\" values from being used, so don't use this mechanism\n         unless you are sure you always want it.\n      -->\n    <!--\n       <lst name=\"invariants\">\n         <str name=\"facet.field\">cat</str>\n         <str name=\"facet.field\">manu_exact</str>\n         <str name=\"facet.query\">price:[* TO 500]</str>\n         <str name=\"facet.query\">price:[500 TO *]</str>\n       </lst>\n      -->\n    <!-- If the default list of SearchComponents is not desired, that\n         list can either be overridden completely, or components can be\n         prepended or appended to the default list.  (see below)\n      -->\n    <!--\n       <arr name=\"components\">\n         <str>nameOfCustomComponent1</str>\n         <str>nameOfCustomComponent2</str>\n       </arr>\n      -->\n    </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n       <str name=\"df\">text</str>\n     </lst>\n  </requestHandler>\n\n\n  <!-- realtime get handler, guaranteed to return the latest stored fields of\n       any document, without the need to commit or open a new searcher.  The\n       current implementation relies on the updateLog feature being enabled.\n\n       ** WARNING **\n       Do NOT disable the realtime get handler at /get if you are using\n       SolrCloud otherwise any leader election will cause a full sync in ALL\n       replicas for the shard in question. Similarly, a replica recovery will\n       also always fetch the complete index from the leader because a partial\n       sync will not be possible in the absence of this handler.\n  -->\n  <requestHandler name=\"/get\" class=\"solr.RealTimeGetHandler\">\n     <lst name=\"defaults\">\n       <str name=\"omitHeader\">true</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n     </lst>\n  </requestHandler>\n\n\n  <!-- A Robust Example\n\n       This example SearchHandler declaration shows off usage of the\n       SearchHandler with many defaults declared\n\n       Note that multiple instances of the same Request Handler\n       (SearchHandler) can be registered multiple times with different\n       names (and different init parameters)\n    -->\n  <requestHandler name=\"/browse\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n\n      <!-- VelocityResponseWriter settings -->\n      <str name=\"wt\">velocity</str>\n      <str name=\"v.template\">browse</str>\n      <str name=\"v.layout\">layout</str>\n\n      <!-- Query settings -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n\n      <!-- Faceting defaults -->\n      <str name=\"facet\">on</str>\n      <str name=\"facet.mincount\">1</str>\n    </lst>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell,/browse\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n    </lst>\n  </initParams>\n\n  <!-- Update Request Handler.\n\n       http://wiki.apache.org/solr/UpdateXmlMessages\n\n       The canonical Request Handler for Modifying the Index through\n       commands specified using XML, JSON, CSV, or JAVABIN\n\n       Note: Since solr1.1 requestHandlers requires a valid content\n       type header if posted in the body. For example, curl now\n       requires: -H 'Content-type:text/xml; charset=utf-8'\n\n       To override the request content type and force a specific\n       Content-type, use the request parameter:\n         ?update.contentType=text/csv\n\n       This handler will pick a response format to match the input\n       if the 'wt' parameter is not explicit\n    -->\n  <requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">\n    <!-- See below for information on defining\n         updateRequestProcessorChains that can be used by name\n         on each Update Request\n      -->\n    <!--\n       <lst name=\"defaults\">\n         <str name=\"update.chain\">dedupe</str>\n       </lst>\n       -->\n  </requestHandler>\n\n  <!-- Solr Cell Update Request Handler\n\n       http://wiki.apache.org/solr/ExtractingRequestHandler\n\n    -->\n  <requestHandler name=\"/update/extract\"\n                  startup=\"lazy\"\n                  class=\"solr.extraction.ExtractingRequestHandler\" >\n    <lst name=\"defaults\">\n      <str name=\"lowernames\">true</str>\n      <str name=\"uprefix\">ignored_</str>\n\n      <!-- capture link hrefs but ignore div attributes -->\n      <str name=\"captureAttr\">true</str>\n      <str name=\"fmap.a\">links</str>\n      <str name=\"fmap.div\">ignored_</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\" />\n\n  <!-- This single handler is equivalent to the following... -->\n  <!--\n     <requestHandler name=\"/admin/luke\"       class=\"solr.admin.LukeRequestHandler\" />\n     <requestHandler name=\"/admin/system\"     class=\"solr.admin.SystemInfoHandler\" />\n     <requestHandler name=\"/admin/plugins\"    class=\"solr.admin.PluginInfoHandler\" />\n     <requestHandler name=\"/admin/threads\"    class=\"solr.admin.ThreadDumpHandler\" />\n     <requestHandler name=\"/admin/properties\" class=\"solr.admin.PropertiesRequestHandler\" />\n     <requestHandler name=\"/admin/file\"       class=\"solr.admin.ShowFileRequestHandler\" >\n    -->\n  <!-- If you wish to hide files under ${solr.home}/conf, explicitly\n       register the ShowFileRequestHandler using the definition below.\n       NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will\n             not exclude all files ending in '.xml'. Use it to exclude _all_ updates\n    -->\n  <!--\n     <requestHandler name=\"/admin/file\"\n                     class=\"solr.admin.ShowFileRequestHandler\" >\n       <lst name=\"invariants\">\n         <str name=\"hidden\">synonyms.txt</str>\n         <str name=\"hidden\">anotherfile.txt</str>\n         <str name=\"hidden\">*</str>\n       </lst>\n     </requestHandler>\n    -->\n\n  <!--\n    Enabling this request handler (which is NOT a default part of the admin handler) will allow the Solr UI to edit\n    all the config files. This is intended for secure/development use ONLY! Leaving available and publically\n    accessible is a security vulnerability and should be done with extreme caution!\n  -->\n  <!--\n  <requestHandler name=\"/admin/fileedit\" class=\"solr.admin.EditFileRequestHandler\" >\n    <lst name=\"invariants\">\n         <str name=\"hidden\">synonyms.txt</str>\n         <str name=\"hidden\">anotherfile.txt</str>\n    </lst>\n  </requestHandler>\n  -->\n  <!-- ping/healthcheck -->\n  <requestHandler name=\"/admin/ping\" class=\"solr.PingRequestHandler\">\n    <lst name=\"invariants\">\n      <str name=\"q\">solrpingquery</str>\n    </lst>\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">all</str>\n    </lst>\n    <!-- An optional feature of the PingRequestHandler is to configure the\n         handler with a \"healthcheckFile\" which can be used to enable/disable\n         the PingRequestHandler.\n         relative paths are resolved against the data dir\n      -->\n    <!-- <str name=\"healthcheckFile\">server-enabled.txt</str> -->\n  </requestHandler>\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n     <str name=\"echoParams\">explicit</str>\n     <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n  <!-- Solr Replication\n\n       The SolrReplicationHandler supports replicating indexes from a\n       \"master\" used for indexing and \"slaves\" used for queries.\n\n       http://wiki.apache.org/solr/SolrReplication\n\n       It is also necessary for SolrCloud to function (in Cloud mode, the\n       replication handler is used to bulk transfer segments when nodes\n       are added or need to recover).\n\n       https://wiki.apache.org/solr/SolrCloud/\n    -->\n  <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" >\n    <!--\n       To enable simple master/slave replication, uncomment one of the\n       sections below, depending on whether this solr instance should be\n       the \"master\" or a \"slave\".  If this instance is a \"slave\" you will\n       also need to fill in the masterUrl to point to a real machine.\n    -->\n    <!--\n       <lst name=\"master\">\n         <str name=\"replicateAfter\">commit</str>\n         <str name=\"replicateAfter\">startup</str>\n         <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n       </lst>\n    -->\n    <!--\n       <lst name=\"slave\">\n         <str name=\"masterUrl\">http://your-master-hostname:8983/solr</str>\n         <str name=\"pollInterval\">00:00:60</str>\n       </lst>\n    -->\n  </requestHandler>\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by\n       instances of SearchHandler (which can access them by name)\n\n       By default, the following components are available:\n\n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n       Default configuration in a requestHandler would look like:\n\n       <arr name=\"components\">\n         <str>query</str>\n         <str>facet</str>\n         <str>mlt</str>\n         <str>highlight</str>\n         <str>stats</str>\n         <str>debug</str>\n       </arr>\n\n       If you register a searchComponent to one of the standard names,\n       that will be used instead of the default.\n\n       To insert components before or after the 'standard' components, use:\n\n       <arr name=\"first-components\">\n         <str>myFirstComponentName</str>\n       </arr>\n\n       <arr name=\"last-components\">\n         <str>myLastComponentName</str>\n       </arr>\n\n       NOTE: The component registered with the name \"debug\" will\n       always be executed after the \"last-components\"\n\n     -->\n\n   <!-- Spell Check\n\n        The spell check component can return a list of alternative spelling\n        suggestions.\n\n        http://wiki.apache.org/solr/SpellCheckComponent\n     -->\n  <searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">\n\n    <str name=\"queryAnalyzerFieldType\">text_general</str>\n\n    <!-- Multiple \"Spell Checkers\" can be declared and used by this\n         component\n      -->\n\n    <!-- a spellchecker built from a field of the main index -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">default</str>\n      <str name=\"field\">text</str>\n      <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->\n      <str name=\"distanceMeasure\">internal</str>\n      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->\n      <float name=\"accuracy\">0.5</float>\n      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->\n      <int name=\"maxEdits\">2</int>\n      <!-- the minimum shared prefix when enumerating terms -->\n      <int name=\"minPrefix\">1</int>\n      <!-- maximum number of inspections per result. -->\n      <int name=\"maxInspections\">5</int>\n      <!-- minimum length of a query term to be considered for correction -->\n      <int name=\"minQueryLength\">4</int>\n      <!-- maximum threshold of documents a query term can appear to be considered for correction -->\n      <float name=\"maxQueryFrequency\">0.01</float>\n      <!-- uncomment this to require suggestions to occur in 1% of the documents\n        <float name=\"thresholdTokenFrequency\">.01</float>\n      -->\n    </lst>\n\n    <!-- a spellchecker that can break or combine words.  See \"/spell\" handler below for usage -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">wordbreak</str>\n      <str name=\"classname\">solr.WordBreakSolrSpellChecker</str>\n      <str name=\"field\">name</str>\n      <str name=\"combineWords\">true</str>\n      <str name=\"breakWords\">true</str>\n      <int name=\"maxChanges\">10</int>\n    </lst>\n\n    <!-- a spellchecker that uses a different distance measure -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"name\">jarowinkler</str>\n         <str name=\"field\">spell</str>\n         <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n         <str name=\"distanceMeasure\">\n           org.apache.lucene.search.spell.JaroWinklerDistance\n         </str>\n       </lst>\n     -->\n\n    <!-- a spellchecker that use an alternate comparator\n\n         comparatorClass be one of:\n          1. score (default)\n          2. freq (Frequency first, then score)\n          3. A fully qualified class name\n      -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"name\">freq</str>\n         <str name=\"field\">lowerfilt</str>\n         <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n         <str name=\"comparatorClass\">freq</str>\n      -->\n\n    <!-- A spellchecker that reads the list of words from a file -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"classname\">solr.FileBasedSpellChecker</str>\n         <str name=\"name\">file</str>\n         <str name=\"sourceLocation\">spellings.txt</str>\n         <str name=\"characterEncoding\">UTF-8</str>\n         <str name=\"spellcheckIndexDir\">spellcheckerFile</str>\n       </lst>\n      -->\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the spellcheck component.\n\n       NOTE: This is purely as an example.  The whole purpose of the\n       SpellCheckComponent is to hook it into the request handler that\n       handles your normal user queries so that a separate request is\n       not needed to get suggestions.\n\n       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS\n       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!\n\n       See http://wiki.apache.org/solr/SpellCheckComponent for details\n       on the request parameters.\n    -->\n  <requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <!-- Solr will use suggestions from both the 'default' spellchecker\n           and from the 'wordbreak' spellchecker and combine them.\n           collations (re-written queries) can include a combination of\n           corrections from both spellcheckers -->\n      <str name=\"spellcheck.dictionary\">default</str>\n      <str name=\"spellcheck.dictionary\">wordbreak</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.extendedResults\">true</str>\n      <str name=\"spellcheck.count\">10</str>\n      <str name=\"spellcheck.alternativeTermCount\">5</str>\n      <str name=\"spellcheck.maxResultsForSuggest\">5</str>\n      <str name=\"spellcheck.collate\">true</str>\n      <str name=\"spellcheck.collateExtendedResults\">true</str>\n      <str name=\"spellcheck.maxCollationTries\">10</str>\n      <str name=\"spellcheck.maxCollations\">5</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheck</str>\n    </arr>\n  </requestHandler>\n\n  <searchComponent name=\"suggest\" class=\"solr.SuggestComponent\">\n        <lst name=\"suggester\">\n      <str name=\"name\">mySuggester</str>\n      <str name=\"lookupImpl\">FuzzyLookupFactory</str>      <!-- org.apache.solr.spelling.suggest.fst -->\n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>     <!-- org.apache.solr.spelling.suggest.HighFrequencyDictionaryFactory -->\n      <str name=\"field\">cat</str>\n      <str name=\"weightField\">price</str>\n      <str name=\"suggestAnalyzerFieldType\">string</str>\n    </lst>\n  </searchComponent>\n\n  <requestHandler name=\"/suggest\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"suggest\">true</str>\n      <str name=\"suggest.count\">10</str>\n    </lst>\n    <arr name=\"components\">\n      <str>suggest</str>\n    </arr>\n  </requestHandler>\n  <!-- Term Vector Component\n\n       http://wiki.apache.org/solr/TermVectorComponent\n    -->\n  <searchComponent name=\"tvComponent\" class=\"solr.TermVectorComponent\"/>\n\n  <!-- A request handler for demonstrating the term vector component\n\n       This is purely as an example.\n\n       In reality you will likely want to add the component to your\n       already specified request handlers.\n    -->\n  <requestHandler name=\"/tvrh\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <bool name=\"tv\">true</bool>\n    </lst>\n    <arr name=\"last-components\">\n      <str>tvComponent</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Clustering Component\n\n       You'll need to set the solr.clustering.enabled system property\n       when running solr to run with clustering enabled:\n\n            java -Dsolr.clustering.enabled=true -jar start.jar\n\n       http://wiki.apache.org/solr/ClusteringComponent\n       http://carrot2.github.io/solr-integration-strategies/\n    -->\n  <searchComponent name=\"clustering\"\n                   enable=\"${solr.clustering.enabled:false}\"\n                   class=\"solr.clustering.ClusteringComponent\" >\n    <lst name=\"engine\">\n      <str name=\"name\">lingo</str>\n\n      <!-- Class name of a clustering algorithm compatible with the Carrot2 framework.\n\n           Currently available open source algorithms are:\n           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm\n           * org.carrot2.clustering.stc.STCClusteringAlgorithm\n           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm\n\n           See http://project.carrot2.org/algorithms.html for more information.\n\n           A commercial algorithm Lingo3G (needs to be installed separately) is defined as:\n           * com.carrotsearch.lingo3g.Lingo3GClusteringAlgorithm\n        -->\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>\n\n      <!-- Override location of the clustering algorithm's resources\n           (attribute definitions and lexical resources).\n\n           A directory from which to load algorithm-specific stop words,\n           stop labels and attribute definition XMLs.\n\n           For an overview of Carrot2 lexical resources, see:\n           http://download.carrot2.org/head/manual/#chapter.lexical-resources\n\n           For an overview of Lingo3G lexical resources, see:\n           http://download.carrotsearch.com/lingo3g/manual/#chapter.lexical-resources\n       -->\n      <str name=\"carrot.resourcesDir\">clustering/carrot2</str>\n    </lst>\n\n    <!-- An example definition for the STC clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">stc</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>\n    </lst>\n\n    <!-- An example definition for the bisecting kmeans clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">kmeans</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm</str>\n    </lst>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the clustering component\n\n       This is purely as an example.\n\n       In reality you will likely want to add the component to your\n       already specified request handlers.\n    -->\n  <requestHandler name=\"/clustering\"\n                  startup=\"lazy\"\n                  enable=\"${solr.clustering.enabled:false}\"\n                  class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <bool name=\"clustering\">true</bool>\n      <bool name=\"clustering.results\">true</bool>\n      <!-- Field name with the logical \"title\" of a each document (optional) -->\n      <str name=\"carrot.title\">name</str>\n      <!-- Field name with the logical \"URL\" of a each document (optional) -->\n      <str name=\"carrot.url\">id</str>\n      <!-- Field name with the logical \"content\" of a each document (optional) -->\n      <str name=\"carrot.snippet\">features</str>\n      <!-- Apply highlighter to the title/ content and use this for clustering. -->\n      <bool name=\"carrot.produceSummary\">true</bool>\n      <!-- the maximum number of labels per cluster -->\n      <!--<int name=\"carrot.numDescriptions\">5</int>-->\n      <!-- produce sub clusters -->\n      <bool name=\"carrot.outputSubClusters\">false</bool>\n\n      <!-- Configure the remaining request handler parameters. -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"qf\">\n        text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4\n      </str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>clustering</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n     <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n\n  <!-- Query Elevation Component\n\n       http://wiki.apache.org/solr/QueryElevationComponent\n\n       a search component that enables you to configure the top\n       results for a given query regardless of the normal lucene\n       scoring.\n    -->\n  <searchComponent name=\"elevator\" class=\"solr.QueryElevationComponent\" >\n    <!-- pick a fieldType to analyze queries -->\n    <str name=\"queryFieldType\">string</str>\n    <str name=\"config-file\">elevate.xml</str>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the elevator component -->\n  <requestHandler name=\"/elevate\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"df\">text</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>elevator</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Highlighting Component\n\n       http://wiki.apache.org/solr/HighlightingParameters\n    -->\n  <searchComponent class=\"solr.HighlightComponent\" name=\"highlight\">\n    <highlighting>\n      <!-- Configure the standard fragmenter -->\n      <!-- This could most likely be commented out in the \"default\" case -->\n      <fragmenter name=\"gap\"\n                  default=\"true\"\n                  class=\"solr.highlight.GapFragmenter\">\n        <lst name=\"defaults\">\n          <int name=\"hl.fragsize\">100</int>\n        </lst>\n      </fragmenter>\n\n      <!-- A regular-expression-based fragmenter\n           (for sentence extraction)\n        -->\n      <fragmenter name=\"regex\"\n                  class=\"solr.highlight.RegexFragmenter\">\n        <lst name=\"defaults\">\n          <!-- slightly smaller fragsizes work better because of slop -->\n          <int name=\"hl.fragsize\">70</int>\n          <!-- allow 50% slop on fragment sizes -->\n          <float name=\"hl.regex.slop\">0.5</float>\n          <!-- a basic sentence pattern -->\n          <str name=\"hl.regex.pattern\">[-\\w ,/\\n\\&quot;&apos;]{20,200}</str>\n        </lst>\n      </fragmenter>\n\n      <!-- Configure the standard formatter -->\n      <formatter name=\"html\"\n                 default=\"true\"\n                 class=\"solr.highlight.HtmlFormatter\">\n        <lst name=\"defaults\">\n          <str name=\"hl.simple.pre\"><![CDATA[<em>]]></str>\n          <str name=\"hl.simple.post\"><![CDATA[</em>]]></str>\n        </lst>\n      </formatter>\n\n      <!-- Configure the standard encoder -->\n      <encoder name=\"html\"\n               class=\"solr.highlight.HtmlEncoder\" />\n\n      <!-- Configure the standard fragListBuilder -->\n      <fragListBuilder name=\"simple\"\n                       class=\"solr.highlight.SimpleFragListBuilder\"/>\n\n      <!-- Configure the single fragListBuilder -->\n      <fragListBuilder name=\"single\"\n                       class=\"solr.highlight.SingleFragListBuilder\"/>\n\n      <!-- Configure the weighted fragListBuilder -->\n      <fragListBuilder name=\"weighted\"\n                       default=\"true\"\n                       class=\"solr.highlight.WeightedFragListBuilder\"/>\n\n      <!-- default tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"default\"\n                        default=\"true\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <!--\n        <lst name=\"defaults\">\n          <str name=\"hl.multiValuedSeparatorChar\">/</str>\n        </lst>\n        -->\n      </fragmentsBuilder>\n\n      <!-- multi-colored tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"colored\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <lst name=\"defaults\">\n          <str name=\"hl.tag.pre\"><![CDATA[\n               <b style=\"background:yellow\">,<b style=\"background:lawgreen\">,\n               <b style=\"background:aquamarine\">,<b style=\"background:magenta\">,\n               <b style=\"background:palegreen\">,<b style=\"background:coral\">,\n               <b style=\"background:wheat\">,<b style=\"background:khaki\">,\n               <b style=\"background:lime\">,<b style=\"background:deepskyblue\">]]></str>\n          <str name=\"hl.tag.post\"><![CDATA[</b>]]></str>\n        </lst>\n      </fragmentsBuilder>\n\n      <boundaryScanner name=\"default\"\n                       default=\"true\"\n                       class=\"solr.highlight.SimpleBoundaryScanner\">\n        <lst name=\"defaults\">\n          <str name=\"hl.bs.maxScan\">10</str>\n          <str name=\"hl.bs.chars\">.,!? &#9;&#10;&#13;</str>\n        </lst>\n      </boundaryScanner>\n\n      <boundaryScanner name=\"breakIterator\"\n                       class=\"solr.highlight.BreakIteratorBoundaryScanner\">\n        <lst name=\"defaults\">\n          <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->\n          <str name=\"hl.bs.type\">WORD</str>\n          <!-- language and country are used when constructing Locale object.  -->\n          <!-- And the Locale object will be used when getting instance of BreakIterator -->\n          <str name=\"hl.bs.language\">en</str>\n          <str name=\"hl.bs.country\">US</str>\n        </lst>\n      </boundaryScanner>\n    </highlighting>\n  </searchComponent>\n\n  <!-- Update Processors\n\n       Chains of Update Processor Factories for dealing with Update\n       Requests can be declared, and then used by name in Update\n       Request Processors\n\n       http://wiki.apache.org/solr/UpdateRequestProcessor\n\n    -->\n\n  <!-- Add unknown fields to the schema\n\n       An example field type guessing update processor that will\n       attempt to parse string-typed field values as Booleans, Longs,\n       Doubles, or Dates, and then add schema fields with the guessed\n       field types.\n\n       This requires that the schema is both managed and mutable, by\n       declaring schemaFactory as ManagedIndexSchemaFactory, with\n       mutable specified as true.\n\n       See http://wiki.apache.org/solr/GuessingFieldTypes\n    -->\n  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\">\n    <processor class=\"solr.DefaultValueUpdateProcessorFactory\">\n        <str name=\"fieldName\">_ttl_</str>\n        <str name=\"value\">+{{ranger_audit_max_retention_days}}DAYS</str>\n    </processor>\n    <processor class=\"solr.processor.DocExpirationUpdateProcessorFactory\">\n        <int name=\"autoDeletePeriodSeconds\">86400</int>\n        <str name=\"ttlFieldName\">_ttl_</str>\n        <str name=\"expirationFieldName\">_expire_at_</str>\n    </processor>\n    <processor class=\"solr.FirstFieldValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_expire_at_</str>\n    </processor>\n\n    <processor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseLongFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDateFieldUpdateProcessorFactory\">\n      <arr name=\"format\">\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ssZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss</str>\n        <str>yyyy-MM-dd'T'HH:mmZ</str>\n        <str>yyyy-MM-dd'T'HH:mm</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd HH:mm:ssZ</str>\n        <str>yyyy-MM-dd HH:mm:ss</str>\n        <str>yyyy-MM-dd HH:mmZ</str>\n        <str>yyyy-MM-dd HH:mm</str>\n        <str>yyyy-MM-dd</str>\n      </arr>\n    </processor>\n    <processor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\">\n      <str name=\"defaultFieldType\">key_lower_case</str>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Boolean</str>\n        <str name=\"fieldType\">boolean</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.util.Date</str>\n        <str name=\"fieldType\">tdate</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Long</str>\n        <str name=\"valueClass\">java.lang.Integer</str>\n        <str name=\"fieldType\">tlong</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Number</str>\n        <str name=\"fieldType\">tdouble</str>\n      </lst>\n    </processor>\n    <processor class=\"solr.LogUpdateProcessorFactory\"/>\n    <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  </updateRequestProcessorChain>\n\n\n  <!-- Deduplication\n\n       An example dedup update processor that creates the \"id\" field\n       on the fly based on the hash code of some other fields.  This\n       example has overwriteDupes set to false since we are using the\n       id field as the signatureField and Solr will maintain\n       uniqueness based on that anyway.\n\n    -->\n  <!--\n     <updateRequestProcessorChain name=\"dedupe\">\n       <processor class=\"solr.processor.SignatureUpdateProcessorFactory\">\n         <bool name=\"enabled\">true</bool>\n         <str name=\"signatureField\">id</str>\n         <bool name=\"overwriteDupes\">false</bool>\n         <str name=\"fields\">name,features,cat</str>\n         <str name=\"signatureClass\">solr.processor.Lookup3Signature</str>\n       </processor>\n       <processor class=\"solr.LogUpdateProcessorFactory\" />\n       <processor class=\"solr.RunUpdateProcessorFactory\" />\n     </updateRequestProcessorChain>\n    -->\n\n  <!-- Language identification\n\n       This example update chain identifies the language of the incoming\n       documents using the langid contrib. The detected language is\n       written to field language_s. No field name mapping is done.\n       The fields used for detection are text, title, subject and description,\n       making this example suitable for detecting languages form full-text\n       rich documents injected via ExtractingRequestHandler.\n       See more about langId at http://wiki.apache.org/solr/LanguageDetection\n    -->\n    <!--\n     <updateRequestProcessorChain name=\"langid\">\n       <processor class=\"org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory\">\n         <str name=\"langid.fl\">text,title,subject,description</str>\n         <str name=\"langid.langField\">language_s</str>\n         <str name=\"langid.fallback\">en</str>\n       </processor>\n       <processor class=\"solr.LogUpdateProcessorFactory\" />\n       <processor class=\"solr.RunUpdateProcessorFactory\" />\n     </updateRequestProcessorChain>\n    -->\n\n  <!-- Script update processor\n\n    This example hooks in an update processor implemented using JavaScript.\n\n    See more about the script update processor at http://wiki.apache.org/solr/ScriptUpdateProcessor\n  -->\n  <!--\n    <updateRequestProcessorChain name=\"script\">\n      <processor class=\"solr.StatelessScriptUpdateProcessorFactory\">\n        <str name=\"script\">update-script.js</str>\n        <lst name=\"params\">\n          <str name=\"config_param\">example config parameter</str>\n        </lst>\n      </processor>\n      <processor class=\"solr.RunUpdateProcessorFactory\" />\n    </updateRequestProcessorChain>\n  -->\n\n  <!-- Response Writers\n\n       http://wiki.apache.org/solr/QueryResponseWriter\n\n       Request responses will be written using the writer specified by\n       the 'wt' request parameter matching the name of a registered\n       writer.\n\n       The \"default\" writer is the default and will be used if 'wt' is\n       not specified in the request.\n    -->\n  <!-- The following response writers are implicitly configured unless\n       overridden...\n    -->\n  <!--\n     <queryResponseWriter name=\"xml\"\n                          default=\"true\"\n                          class=\"solr.XMLResponseWriter\" />\n     <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\"/>\n     <queryResponseWriter name=\"python\" class=\"solr.PythonResponseWriter\"/>\n     <queryResponseWriter name=\"ruby\" class=\"solr.RubyResponseWriter\"/>\n     <queryResponseWriter name=\"php\" class=\"solr.PHPResponseWriter\"/>\n     <queryResponseWriter name=\"phps\" class=\"solr.PHPSerializedResponseWriter\"/>\n     <queryResponseWriter name=\"csv\" class=\"solr.CSVResponseWriter\"/>\n     <queryResponseWriter name=\"schema.xml\" class=\"solr.SchemaXmlResponseWriter\"/>\n    -->\n\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">\n     <!-- For the purposes of the tutorial, JSON responses are written as\n      plain text so that they are easy to read in *any* browser.\n      If you expect a MIME type of \"application/json\" just remove this override.\n     -->\n    <str name=\"content-type\">text/plain; charset=UTF-8</str>\n  </queryResponseWriter>\n\n  <!--\n     Custom response writers can be declared as needed...\n    -->\n  <queryResponseWriter name=\"velocity\" class=\"solr.VelocityResponseWriter\" startup=\"lazy\">\n    <str name=\"template.base.dir\">${velocity.template.base.dir:}</str>\n  </queryResponseWriter>\n\n  <!-- XSLT response writer transforms the XML output by any xslt file found\n       in Solr's conf/xslt directory.  Changes to xslt files are checked for\n       every xsltCacheLifetimeSeconds.\n    -->\n  <queryResponseWriter name=\"xslt\" class=\"solr.XSLTResponseWriter\">\n    <int name=\"xsltCacheLifetimeSeconds\">5</int>\n  </queryResponseWriter>\n\n  <!-- Query Parsers\n\n       http://wiki.apache.org/solr/SolrQuerySyntax\n\n       Multiple QParserPlugins can be registered by name, and then\n       used in either the \"defType\" param for the QueryComponent (used\n       by SearchHandler) or in LocalParams\n    -->\n  <!-- example of registering a query parser -->\n  <!--\n     <queryParser name=\"myparser\" class=\"com.mycompany.MyQParserPlugin\"/>\n    -->\n\n  <!-- Function Parsers\n\n       http://wiki.apache.org/solr/FunctionQuery\n\n       Multiple ValueSourceParsers can be registered by name, and then\n       used as function names when using the \"func\" QParser.\n    -->\n  <!-- example of registering a custom function parser  -->\n  <!--\n     <valueSourceParser name=\"myfunc\"\n                        class=\"com.mycompany.MyValueSourceParser\" />\n    -->\n\n\n  <!-- Document Transformers\n       http://wiki.apache.org/solr/DocTransformers\n    -->\n  <!--\n     Could be something like:\n     <transformer name=\"db\" class=\"com.mycompany.LoadFromDatabaseTransformer\" >\n       <int name=\"connection\">jdbc://....</int>\n     </transformer>\n\n     To add a constant value to all docs, use:\n     <transformer name=\"mytrans2\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n       <int name=\"value\">5</int>\n     </transformer>\n\n     If you want the user to still be able to change it with _value:something_ use this:\n     <transformer name=\"mytrans3\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n       <double name=\"defaultValue\">5</double>\n     </transformer>\n\n      If you are using the QueryElevationComponent, you may wish to mark documents that get boosted.  The\n      EditorialMarkerFactory will do exactly that:\n     <transformer name=\"qecBooster\" class=\"org.apache.solr.response.transform.EditorialMarkerFactory\" />\n    -->\n\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>",
        "ranger_audit_logs_merge_factor": "5",
        "ranger_audit_max_retention_days": "90"
      }
    }
  }, {
    "ranger-tagsync-policymgr-ssl": {
      "properties_attributes": {},
      "properties": {
        "xasecure.policymgr.clientssl.keystore": "/etc/security/serverKeys/ranger-tagsync-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{ranger_tagsync_credential_file}}",
        "xasecure.policymgr.clientssl.keystore.password": "myKeyFilePassword",
        "xasecure.policymgr.clientssl.truststore": "/etc/security/serverKeys/ranger-tagsync-mytruststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{ranger_tagsync_credential_file}}",
        "xasecure.policymgr.clientssl.truststore.password": "changeit"
      }
    }
  }, {
    "ranger-tagsync-site": {
      "properties_attributes": {},
      "properties": {
        "ranger.tagsync.atlas.default.cluster.name": "{{cluster_name}}",
        "ranger.tagsync.cookie.enabled": "true",
        "ranger.tagsync.dest.ranger.endpoint": "{{ranger_external_url}}",
        "ranger.tagsync.dest.ranger.ssl.config.filename": "{{stack_root}}/current/ranger-tagsync/conf/ranger-policymgr-ssl.xml",
        "ranger.tagsync.dest.ranger.username": "rangertagsync",
        "ranger.tagsync.kerberos.keytab": "",
        "ranger.tagsync.kerberos.principal": "",
        "ranger.tagsync.keystore.filename": "/usr/hdp/current/ranger-tagsync/conf/rangertagsync.jceks",
        "ranger.tagsync.logdir": "/var/log/ranger/tagsync",
        "ranger.tagsync.source.atlas": "true",
        "ranger.tagsync.source.atlasrest": "false",
        "ranger.tagsync.source.atlasrest.download.interval.millis": "60000",
        "ranger.tagsync.source.atlasrest.endpoint": "http://os05-14.hwx:21000",
        "ranger.tagsync.source.atlasrest.keystore.filename": "/usr/hdp/current/ranger-tagsync/conf/atlasuser.jceks",
        "ranger.tagsync.source.atlasrest.ssl.config.filename": "{{stack_root}}/current/ranger-tagsync/conf/atlas-tagsync-ssl.xml",
        "ranger.tagsync.source.atlasrest.username": "admin",
        "ranger.tagsync.source.file": "false",
        "ranger.tagsync.source.file.check.interval.millis": "",
        "ranger.tagsync.source.file.filename": ""
      }
    }
  }, {
    "ranger-ugsync-site": {
      "properties_attributes": {},
      "properties": {
        "ranger.usersync.cookie.enabled": "true",
        "ranger.usersync.credstore.filename": "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
        "ranger.usersync.enabled": "true",
        "ranger.usersync.filesource.file": "/tmp/usergroup.txt",
        "ranger.usersync.filesource.text.delimiter": ",",
        "ranger.usersync.group.memberattributename": "",
        "ranger.usersync.group.nameattribute": "",
        "ranger.usersync.group.objectclass": "",
        "ranger.usersync.group.search.first.enabled": "false",
        "ranger.usersync.group.searchbase": "",
        "ranger.usersync.group.searchenabled": "true",
        "ranger.usersync.group.searchfilter": "",
        "ranger.usersync.group.searchscope": "",
        "ranger.usersync.group.usermapsyncenabled": "true",
        "ranger.usersync.kerberos.keytab": "",
        "ranger.usersync.kerberos.principal": "",
        "ranger.usersync.keystore.file": "/usr/hdp/current/ranger-usersync/conf/unixauthservice.jks",
        "ranger.usersync.keystore.password": "UnIx529p",
        "ranger.usersync.ldap.bindalias": "testldapalias",
        "ranger.usersync.ldap.binddn": "",
        "ranger.usersync.ldap.bindkeystore": "",
        "ranger.usersync.ldap.deltasync": "true",
        "ranger.usersync.ldap.grouphierarchylevels": "0",
        "ranger.usersync.ldap.groupname.caseconversion": "none",
        "ranger.usersync.ldap.ldapbindpassword": "",
        "ranger.usersync.ldap.referral": "ignore",
        "ranger.usersync.ldap.searchBase": "dc=hadoop,dc=apache,dc=org",
        "ranger.usersync.ldap.starttls": "false",
        "ranger.usersync.ldap.url": "",
        "ranger.usersync.ldap.user.groupnameattribute": "memberof, ismemberof",
        "ranger.usersync.ldap.user.nameattribute": "",
        "ranger.usersync.ldap.user.objectclass": "person",
        "ranger.usersync.ldap.user.searchbase": "",
        "ranger.usersync.ldap.user.searchfilter": "",
        "ranger.usersync.ldap.user.searchscope": "sub",
        "ranger.usersync.ldap.username.caseconversion": "none",
        "ranger.usersync.logdir": "{{usersync_log_dir}}",
        "ranger.usersync.pagedresultsenabled": "true",
        "ranger.usersync.pagedresultssize": "500",
        "ranger.usersync.passwordvalidator.path": "./native/credValidator.uexe",
        "ranger.usersync.policymanager.baseURL": "{{ranger_external_url}}",
        "ranger.usersync.policymanager.maxrecordsperapicall": "1000",
        "ranger.usersync.policymanager.mockrun": "false",
        "ranger.usersync.policymgr.alias": "ranger.usersync.policymgr.password",
        "ranger.usersync.policymgr.keystore": "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
        "ranger.usersync.policymgr.username": "rangerusersync",
        "ranger.usersync.port": "5151",
        "ranger.usersync.sink.impl.class": "org.apache.ranger.unixusersync.process.PolicyMgrUserGroupBuilder",
        "ranger.usersync.sleeptimeinmillisbetweensynccycle": "60000",
        "ranger.usersync.source.impl.class": "org.apache.ranger.unixusersync.process.UnixUserGroupBuilder",
        "ranger.usersync.ssl": "true",
        "ranger.usersync.truststore.file": "/usr/hdp/current/ranger-usersync/conf/mytruststore.jks",
        "ranger.usersync.truststore.password": "changeit",
        "ranger.usersync.unix.group.file": "/etc/group",
        "ranger.usersync.unix.minUserId": "500",
        "ranger.usersync.unix.password.file": "/etc/passwd",
        "ranger.usersync.user.searchenabled": "false"
      }
    }
  }, {
    "tagsync-application-properties": {
      "properties_attributes": {},
      "properties": {
        "atlas.kafka.bootstrap.servers": "os05-14.hwx:6667,os07-14.hwx:6667,os06-14.hwx:6667",
        "atlas.kafka.entities.group.id": "ranger_entities_consumer",
        "atlas.kafka.zookeeper.connect": "os05-14.hwx:2181,os07-14.hwx:2181,os06-14.hwx:2181"
      }
    }
  }, {
    "tagsync-log4j": {
      "properties_attributes": {},
      "properties": {
        "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/tagsync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.MaxFileSize={{ranger_tagsync_log_maxfilesize}}MB\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n",
        "ranger_tagsync_log_maxfilesize": "256",
        "ranger_tagsync_log_number_of_backup_files": "20"
      }
    }
  }, {
    "usersync-log4j": {
      "properties_attributes": {},
      "properties": {
        "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/usersync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n\nlog4j.appender.logFile.MaxFileSize={{ranger_usersync_log_maxfilesize}}MB\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n",
        "ranger_usersync_log_maxbackupindex": "20",
        "ranger_usersync_log_maxfilesize": "256"
      }
    }
  }, {
    "dbks-site": {
      "properties_attributes": {},
      "properties": {
        "hadoop.kms.blacklist.DECRYPT_EEK": "hdfs",
        "ranger.db.encrypt.key.password": "_",
        "ranger.ks.hsm.enabled": "false",
        "ranger.ks.hsm.partition.name": "par19",
        "ranger.ks.hsm.partition.password": "_",
        "ranger.ks.hsm.partition.password.alias": "ranger.kms.hsm.partition.password",
        "ranger.ks.hsm.type": "LunaProvider",
        "ranger.ks.jdbc.sqlconnectorjar": "{{ews_lib_jar_path}}",
        "ranger.ks.jpa.jdbc.credential.alias": "ranger.ks.jdbc.password",
        "ranger.ks.jpa.jdbc.credential.provider.path": "/etc/ranger/kms/rangerkms.jceks",
        "ranger.ks.jpa.jdbc.dialect": "{{jdbc_dialect}}",
        "ranger.ks.jpa.jdbc.driver": "com.mysql.jdbc.Driver",
        "ranger.ks.jpa.jdbc.password": "_",
        "ranger.ks.jpa.jdbc.url": "jdbc:mysql://db.hwx:3306/rangerkms_14",
        "ranger.ks.jpa.jdbc.user": "{{db_user}}",
        "ranger.ks.kerberos.keytab": "",
        "ranger.ks.kerberos.principal": "",
        "ranger.ks.masterkey.credential.alias": "ranger.ks.masterkey.password"
      }
    }
  }, {
    "kms-env": {
      "properties_attributes": {},
      "properties": {
        "content": "#!/bin/bash\n\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Set Ranger KMS specific environment variables here.\n\nexport JAVA_HOME={{java_home}}\nexport RANGER_KMS_LOG_DIR={{kms_log_dir}}\nexport RANGER_KMS_PID_DIR_PATH={{ranger_kms_pid_dir}}\nexport KMS_USER={{kms_user}}\n{% if security_enabled %}\nexport JAVA_OPTS=\" ${JAVA_OPTS} -Dzookeeper.sasl.client.username={{zookeeper_principal_primary}} \"\n{% endif %}",
        "create_db_user": "false",
        "hsm_partition_password": "",
        "kms_log_dir": "/var/log/ranger/kms",
        "kms_port": "9292",
        "ranger_kms_pid_dir": "/var/run/ranger_kms",
        "test_db_kms_connection": "",
        "kms_group": "kms",
        "kms_user": "kms"
      }
    }
  }, {
    "kms-log4j": {
      "properties_attributes": {},
      "properties": {
        "content": "\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'kms.log.dir' is not defined at KMS start up time\n# Setup sets its value to '${kms.home}/logs'\n\nlog4j.appender.kms=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kms.DatePattern='.'yyyy-MM-dd\nlog4j.appender.kms.File=${kms.log.dir}/kms.log\nlog4j.appender.kms.Append=true\nlog4j.appender.kms.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kms.layout.ConversionPattern=%d{ISO8601} %-5p %c{1} - %m%n\nlog4j.appender.kms.MaxFileSize={{ranger_kms_log_maxfilesize}}MB\n\nlog4j.appender.kms-audit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kms-audit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.kms-audit.File=${kms.log.dir}/kms-audit.log\nlog4j.appender.kms-audit.Append=true\nlog4j.appender.kms-audit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kms-audit.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.kms-audit.MaxFileSize={{ranger_kms_audit_log_maxfilesize}}MB\n\nlog4j.logger.kms-audit=INFO, kms-audit\nlog4j.additivity.kms-audit=false\n\nlog4j.logger=INFO, kms\nlog4j.additivity.kms=false\nlog4j.rootLogger=INFO, kms\nlog4j.logger.org.apache.hadoop.conf=ERROR\nlog4j.logger.org.apache.hadoop=INFO\nlog4j.logger.com.sun.jersey.server.wadl.generators.WadlGeneratorJAXBGrammarGenerator=OFF",
        "ranger_kms_audit_log_maxbackupindex": "20",
        "ranger_kms_audit_log_maxfilesize": "256",
        "ranger_kms_log_maxbackupindex": "20",
        "ranger_kms_log_maxfilesize": "256"
      }
    }
  }, {
    "kms-properties": {
      "properties_attributes": {},
      "properties": {
        "DB_FLAVOR": "MYSQL",
        "KMS_MASTER_KEY_PASSWD": "hortonworks",
        "REPOSITORY_CONFIG_PASSWORD": "keyadmin",
        "REPOSITORY_CONFIG_USERNAME": "keyadmin",
        "SQL_CONNECTOR_JAR": "{{driver_curl_target}}",
        "db_host": "db.hwx",
        "db_name": "rangerkms_14",
        "db_password": "hortonworks",
        "db_root_password": "",
        "db_root_user": "root",
        "db_user": "root"
      }
    }
  }, {
    "kms-site": {
      "properties_attributes": {},
      "properties": {
        "hadoop.kms.proxyuser.yarn.hosts": "*",
        "hadoop.kms.proxyuser.yarn.groups": "*",
        "hadoop.kms.proxyuser.yarn.users": "*",
        "hadoop.kms.audit.aggregation.window.ms": "10000",
        "hadoop.kms.authentication.kerberos.name.rules": "DEFAULT",
        "hadoop.kms.authentication.signer.secret.provider": "random",
        "hadoop.kms.authentication.signer.secret.provider.zookeeper.auth.type": "kerberos",
        "hadoop.kms.authentication.signer.secret.provider.zookeeper.connection.string": "#HOSTNAME#:#PORT#,...",
        "hadoop.kms.authentication.signer.secret.provider.zookeeper.path": "/hadoop-kms/hadoop-auth-signature-secret",
        "hadoop.kms.authentication.type": "simple",
        "hadoop.kms.cache.enable": "true",
        "hadoop.kms.cache.timeout.ms": "600000",
        "hadoop.kms.current.key.cache.timeout.ms": "30000",
        "hadoop.kms.key.provider.uri": "dbks://http@localhost:9292/kms",
        "hadoop.kms.security.authorization.manager": "org.apache.ranger.authorization.kms.authorizer.RangerKmsAuthorizer",
        "hadoop.security.keystore.JavaKeyStoreProvider.password": "none"
      }
    }
  }, {
    "ranger-kms-audit": {
      "properties_attributes": {},
      "properties": {
        "ranger.plugin.kms.ambari.cluster.name": "{{cluster_name}}",
        "xasecure.audit.destination.hdfs": "true",
        "xasecure.audit.destination.hdfs.batch.filespool.dir": "/var/log/ranger/kms/audit/hdfs/spool",
        "xasecure.audit.destination.hdfs.dir": "hdfs://os02-14.hwx:8020/ranger/audit",
        "xasecure.audit.destination.solr": "true",
        "xasecure.audit.destination.solr.batch.filespool.dir": "/var/log/ranger/kms/audit/solr/spool",
        "xasecure.audit.destination.solr.urls": "",
        "xasecure.audit.destination.solr.zookeepers": "os05-14.hwx:2181,os06-14.hwx:2181,os07-14.hwx:2181/infra-solr",
        "xasecure.audit.is.enabled": "true",
        "xasecure.audit.provider.summary.enabled": "false"
      }
    }
  }, {
    "ranger-kms-policymgr-ssl": {
      "properties_attributes": {},
      "properties": {
        "xasecure.policymgr.clientssl.keystore": "/etc/security/serverKeys/ranger-plugin-keystore.jks",
        "xasecure.policymgr.clientssl.keystore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.keystore.password": "myKeyFilePassword",
        "xasecure.policymgr.clientssl.truststore": "/etc/security/serverKeys/ranger-plugin-truststore.jks",
        "xasecure.policymgr.clientssl.truststore.credential.file": "jceks://file{{credential_file}}",
        "xasecure.policymgr.clientssl.truststore.password": "changeit"
      }
    }
  }, {
    "ranger-kms-security": {
      "properties_attributes": {},
      "properties": {
        "ranger.plugin.kms.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
        "ranger.plugin.kms.policy.pollIntervalMs": "30000",
        "ranger.plugin.kms.policy.rest.ssl.config.file": "/etc/ranger/kms/conf/ranger-policymgr-ssl.xml",
        "ranger.plugin.kms.policy.rest.url": "http://os04-14.hwx:6080",
        "ranger.plugin.kms.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
        "ranger.plugin.kms.service.name": "{{repo_name}}"
      }
    }
  }, {
    "ranger-kms-site": {
      "properties_attributes": {},
      "properties": {
        "ajp.enabled": "false",
        "ranger.contextName": "/kms",
        "ranger.credential.provider.path": "/etc/ranger/kms/rangerkms.jceks",
        "ranger.service.host": "{{kms_host}}",
        "ranger.service.http.port": "{{kms_port}}",
        "ranger.service.https.attrib.client.auth": "want",
        "ranger.service.https.attrib.keystore.credential.alias": "keyStoreCredentialAlias",
        "ranger.service.https.attrib.keystore.file": "/etc/security/serverKeys/ranger-kms-keystore.jks",
        "ranger.service.https.attrib.keystore.keyalias": "rangerkms",
        "ranger.service.https.attrib.keystore.pass": "rangerkms",
        "ranger.service.https.attrib.ssl.enabled": "false",
        "ranger.service.https.port": "9393",
        "ranger.service.shutdown.port": "7085",
        "xa.webapp.dir": "./webapp"
      }
    }
  }, {
    "activity-conf": {
      "properties_attributes": {},
      "properties": {
        "activity.explorer.user": "activity_explorer",
        "global.activity.analyzer.user": "activity_analyzer",
        "global.activity.processing.parallelism": "8",
        "global.activity.processor.pool.max.wait.seconds": "60",
        "hdfs.activity.watcher.enabled": "true",
        "mr_job.activity.watcher.enabled": "true",
        "mr_job.max.job.size.mb.for.parallel.execution": "500",
        "phoenix.sink.batch.size": "5000",
        "phoenix.sink.flush.interval.seconds": "3600",
        "tez_job.activity.watcher.enabled": "true",
        "tez_job.tmp.dir": "/var/lib/smartsense/activity-analyzer/tez/tmp/",
        "yarn_app.activity.watcher.enabled": "true"
      }
    }
  }, {
    "activity-env": {
      "properties_attributes": {},
      "properties": {
        "activity-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Enable verbose shell execution\n#set -xv\n\n## Set HOME for various components\nexport HADOOP_HOME=/usr/hdp/current/hadoop-client\nexport HDFS_HOME=/usr/hdp/current/hadoop-hdfs-client\nexport MAPREDUCE_HOME=/usr/hdp/current/hadoop-mapreduce-client\nexport YARN_HOME=/usr/hdp/current/hadoop-yarn-client\nexport HIVE_HOME=/usr/hdp/current/hive-client\nexport HCAT_HOME=/usr/hdp/current/hive-webhcat\nexport TEZ_HOME=/usr/hdp/current/tez-client\nexport HBASE_HOME=/usr/hdp/current/hbase-client\nexport PHOENIX_HOME=/usr/hdp/current/phoenix-client\nexport ACTIVITY_ANALYZER_HOME=/usr/hdp/share/hst/activity-analyzer\nexport AMS_COLLECTOR_HOME=/usr/lib/ambari-metrics-collector\nexport JAVA_HOME={{java_home}}\n\n## Set conf dir for various components\nexport HADOOP_CONF_DIR=/etc/hadoop/conf/\nexport HIVE_CONF_DIR=/etc/hive/conf/\nexport HBASE_CONF_DIR=/etc/hbase/conf/\nexport TEZ_CONF_DIR=/etc/tez/conf/\nexport ACTIVITY_ANALYZER_CONF_DIR=/etc/smartsense-activity/conf/\nexport AMS_HBASE_CONF=/etc/ams-hbase/conf\n\nexport DEBUG_ENABLED=false\n\n## Set JVM related configs\nexport ANALYZER_JAVA_OPTS=\"{{analyzer_jvm_opts}} -Xmx{{analyzer_jvm_heap}}m\"",
        "analyzer_jvm_heap": "8192",
        "analyzer_jvm_opts": "-Xms128m"
      }
    }
  }, {
    "activity-log4j": {
      "properties_attributes": {},
      "properties": {
        "activity-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{activity_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{activity_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{activity_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n",
        "activity_log_dir": "/var/log/smartsense-activity",
        "activity_max_backup_index": "10",
        "activity_max_file_size": "30"
      }
    }
  }, {
    "activity-zeppelin-env": {
      "properties_attributes": {},
      "properties": {
        "activity-zeppelin-env-content": "#!/bin/bash\n\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n\nexport JAVA_HOME={{java_home}}\n# Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\"\nexport ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{hdp_version}} -Dlog.file.name=activity-explorer.log -DSmartSenseActivityExplorer\"      \t\t\n# export ZEPPELIN_INTP_MEM       \t\t# zeppelin interpreter process jvm mem options. Default = ZEPPELIN_MEM\n# export ZEPPELIN_INTP_JAVA_OPTS \t\t# zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS\n\nexport RUN_AS_USER={{run_as_user}}\nexport ZEPPELIN_MEM=\" -Xms256m -Xmx1024m -XX:MaxPermSize=256m\"\nexport ZEPPELIN_LOG_DIR={{activity_log_dir}}\nexport ZEPPELIN_PID_DIR=/var/run/smartsense-activity-explorer\nexport ZEPPELIN_WAR_TEMPDIR=/var/lib/smartsense/activity-explorer/webapp\nexport ZEPPELIN_NOTEBOOK_DIR=/var/lib/smartsense/activity-explorer/notebook\nexport ZEPPELIN_CLASSPATH=\"/etc/ams-hbase/conf:${ZEPPELIN_CLASSPATH}\"\nexport CLASSPATH=${ZEPPELIN_CLASSPATH}"
      }
    }
  }, {
    "activity-zeppelin-interpreter": {
      "properties_attributes": {},
      "properties": {
        "activity-zeppelin-interpreter-content": "{\n  \"interpreterSettings\": {\n    \"jdbc\": {\n      \"id\": \"jdbc\",\n      \"name\": \"jdbc\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"jdbc:postgresql://localhost:5432/\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.postgresql.Driver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"phoenix\": {\n      \"id\": \"phoenix\",\n      \"name\": \"phoenix\",\n      \"group\": \"jdbc\",\n      \"properties\": {\n        \"default.url\": {\n          \"name\": \"default.url\",\n          \"value\": \"{{activity_explorer_jdbc_url}}\",\n          \"type\": \"string\"\n        },\n        \"default.driver\": {\n          \"name\": \"default.driver\",\n          \"value\": \"org.apache.phoenix.jdbc.PhoenixDriver\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.principal\": {\n          \"name\": \"zeppelin.jdbc.principal\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.completer.ttlInSeconds\": {\n          \"name\": \"default.completer.ttlInSeconds\",\n          \"value\": \"120\",\n          \"type\": \"number\"\n        },\n        \"default.password\": {\n          \"name\": \"default.password\",\n          \"value\": \"\",\n          \"type\": \"password\"\n        },\n        \"default.completer.schemaFilters\": {\n          \"name\": \"default.completer.schemaFilters\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"default.splitQueries\": {\n          \"name\": \"default.splitQueries\",\n          \"value\": false,\n          \"type\": \"checkbox\"\n        },\n        \"default.user\": {\n          \"name\": \"default.user\",\n          \"value\": \"gpadmin\",\n          \"type\": \"string\"\n        },\n        \"zeppelin.jdbc.concurrent.max_connection\": {\n          \"name\": \"zeppelin.jdbc.concurrent.max_connection\",\n          \"value\": \"10\",\n          \"type\": \"number\"\n        },\n        \"common.max_count\": {\n          \"name\": \"common.max_count\",\n          \"value\": \"1000\",\n          \"type\": \"number\"\n        },\n        \"default.precode\": {\n          \"name\": \"default.precode\",\n          \"value\": \"\",\n          \"type\": \"textarea\"\n        },\n        \"zeppelin.jdbc.auth.type\": {\n          \"name\": \"zeppelin.jdbc.auth.type\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.statementPrecode\": {\n          \"name\": \"default.statementPrecode\",\n          \"value\": \"\"\n        },\n        \"zeppelin.jdbc.concurrent.use\": {\n          \"name\": \"zeppelin.jdbc.concurrent.use\",\n          \"value\": true,\n          \"type\": \"checkbox\"\n        },\n        \"zeppelin.jdbc.keytab.location\": {\n          \"name\": \"zeppelin.jdbc.keytab.location\",\n          \"value\": \"\",\n          \"type\": \"string\"\n        },\n        \"default.phoenix.query.numberFormat\": {\n          \"name\": \"default.phoenix.query.numberFormat\",\n          \"value\": \"#.#\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"sql\",\n          \"class\": \"org.apache.zeppelin.jdbc.JDBCInterpreter\",\n          \"defaultInterpreter\": true,\n          \"editor\": {\n            \"language\": \"sql\",\n            \"editOnDblClick\": false,\n            \"completionSupport\": true\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"perNote\": \"shared\",\n        \"perUser\": \"shared\",\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    },\n    \"md\": {\n      \"id\": \"md\",\n      \"name\": \"md\",\n      \"group\": \"md\",\n      \"properties\": {\n        \"markdown.parser.type\": {\n          \"name\": \"markdown.parser.type\",\n          \"value\": \"pegdown\",\n          \"type\": \"string\"\n        }\n      },\n      \"status\": \"READY\",\n      \"interpreterGroup\": [\n        {\n          \"name\": \"md\",\n          \"class\": \"org.apache.zeppelin.markdown.Markdown\",\n          \"defaultInterpreter\": false,\n          \"editor\": {\n            \"language\": \"markdown\",\n            \"editOnDblClick\": true,\n            \"completionSupport\": false\n          }\n        }\n      ],\n      \"dependencies\": [],\n      \"option\": {\n        \"remote\": true,\n        \"port\": -1,\n        \"isExistingProcess\": false,\n        \"setPermission\": false,\n        \"owners\": [],\n        \"isUserImpersonate\": false\n      }\n    }\n  },\n  \"interpreterBindings\": {\n    \"2DGK3YSSY\": [\n      \"phoenix\"\n    ],\n    \"2BQH91X36\": [\n      \"phoenix\"\n    ],\n    \"2BNVQJUBK\": [\n      \"phoenix\"\n    ],\n    \"2BPD7951H\": [\n      \"phoenix\"\n    ],\n    \"2DGNFSF2D\": [\n      \"phoenix\"\n    ],\n    \"2DGCYZ7F3\": [\n      \"phoenix\"\n    ],\n    \"2BTCVPTMH\": [\n      \"phoenix\"\n    ]\n  },\n  \"interpreterRepositories\": [\n    {\n      \"id\": \"central\",\n      \"type\": \"default\",\n      \"url\": \"http://repo1.maven.org/maven2/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPReleases\",\n      \"type\": \"default\",\n      \"url\": \"http://repo.hortonworks.com/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"HDPDev\",\n      \"type\": \"default\",\n      \"url\": \"http://nexus-private.hortonworks.com/nexus/content/groups/public/\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    },\n    {\n      \"id\": \"local\",\n      \"type\": \"default\",\n      \"url\": \"file:///var/lib/smartsense/activity-explorer/.m2/repository\",\n      \"releasePolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"snapshotPolicy\": {\n        \"enabled\": true,\n        \"updatePolicy\": \"daily\",\n        \"checksumPolicy\": \"warn\"\n      },\n      \"mirroredRepositories\": [],\n      \"repositoryManager\": false\n    }\n  ]\n}"
      }
    }
  }, {
    "activity-zeppelin-shiro": {
      "properties_attributes": {},
      "properties": {
        "main.credentialMatcher": "org.apache.shiro.authc.credential.PasswordMatcher",
        "main.iniRealm.credentialsMatcher": "$credentialMatcher",
        "main.securityManager.sessionManager": "$sessionManager",
        "main.securityManager.sessionManager.globalSessionTimeout": "86400000",
        "main.sessionManager": "org.apache.shiro.web.session.mgt.DefaultWebSessionManager",
        "users.admin": "hortonworks"
      }
    }
  }, {
    "activity-zeppelin-site": {
      "properties_attributes": {},
      "properties": {
        "zeppelin.anonymous.allowed": "false",
        "zeppelin.interpreter.connect.timeout": "30000",
        "zeppelin.interpreter.dir": "/usr/hdp/share/hst/activity-explorer/interpreter",
        "zeppelin.interpreters": "org.apache.zeppelin.phoenix.PhoenixInterpreter",
        "zeppelin.notebook.cron.enable": "true",
        "zeppelin.notebook.dir": "/var/lib/smartsense/activity-explorer/notebook",
        "zeppelin.notebook.homescreen.hide": "false",
        "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
        "zeppelin.server.addr": "0.0.0.0",
        "zeppelin.server.allowed.origins": "*",
        "zeppelin.server.context.path": "/",
        "zeppelin.server.port": "9060",
        "zeppelin.ssl": "false",
        "zeppelin.ssl.client.auth": "false",
        "zeppelin.ssl.key.manager.password": "admin",
        "zeppelin.ssl.keystore.password": "admin",
        "zeppelin.ssl.keystore.path": "/var/lib/smartsense/activity-explorer/keystore",
        "zeppelin.ssl.keystore.type": "JKS",
        "zeppelin.ssl.truststore.password": "admin",
        "zeppelin.ssl.truststore.path": "/var/lib/smartsense/activity-explorer/truststore",
        "zeppelin.ssl.truststore.type": "JKS",
        "zeppelin.war.tempdir": "/var/lib/smartsense/activity-explorer/webapp",
        "zeppelin.websocket.max.text.message.size": "1024000"
      }
    }
  }, {
    "anonymization-rules": {
      "properties_attributes": {},
      "properties": {
        "anonymization-rules-content": "{\n  \"rules\":[\n    {\n      \"name\": \"IP Address\",\n      \"description\": \"Anonymize IP addresses like 123.123.12.34 from all non-binary files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?![\\\\-])((?<![a-z0-9\\\\.])[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}(?!\\\\.[0-9])(?![a-z0-9]))\"],\n      \"exclude_files\": [\"hdp-select*.*\", \"*version.txt\"]\n    },\n    {\n      \"name\": \"Domain Names\",\n      \"rule_id\": \"Domain\"\n    },\n    {\n      \"name\": \"File Names\",\n      \"rule_id\": \"FileName\",\n      \"description\": \"Anonymize file names that have domain names and/or ip addresses\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"SSN\",\n      \"description\": \"Anonymize social security numbers in format xxx-xx-xxxx from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])([0-9x]{3}-[0-9x]{2}-[0-9]{4})(?![0-9x])\"],\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log*\", \"hst.out*\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Credit Card Numbers\",\n      \"description\": \"Anonymize credit card numbers from .log and .out files\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![0-9x])(18|21|3[04678]|4[0-9x]|5[1-5]|60|65)[0-9x]{2}[- ]([0-9x]{4}[- ]){2}[0-9]{0,4}(?![0-9x])\"],\n      \"extract\": \"(?<![0-9x])([0-9x -]+)(?![0-9x])\",\n      \"include_files\": [\"*.log*\", \"*.out*\"],\n      \"exclude_files\" : [\"hst.log.*\", \"hst.out\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"email\",\n      \"description\": \"Anonymize based on standard email pattern from all files except metadata.json which is used by SmartSense to send bundle notifications\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(?<![a-z0-9._%+-])[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,6}(?![a-z0-9._%+-])$?\"],\n      \"exclude_files\" : [\"metadata.json\"],\n      \"shared\": true\n    },\n    {\n      \"name\": \"Core Site S3 Credentials\",\n      \"description\": \"Anonymize the value of properties from core-site.xml that might contain S3 credentials\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\"fs.s3a.session.token\",\"fs.s3a.proxy.host\",\"fs.s3a.proxy.username\"],\n      \"include_files\": [\"core-site.xml\"],\n      \"action\" : \"REPLACE\",\n      \"replace_value\": \"Hidden\"\n    },\n    {\n      \"name\": \"Password Configurations\",\n      \"description\": \"Anonymize various password related properties from configuration files. Properties and configuration files are listed below\",\n      \"rule_id\": \"Property\",\n      \"properties\": [\".*password.*\", \".*awsAccessKeyId.*\",  \".*awsSecretAccessKey.*\", \"fs.azure.account.key.*\", \"ranger.service.https.attrib.keystore.pass\",\"https.attrib.keystorePass\", \"HTTPS_KEYSTORE_PASS\"],\n      \"include_files\": [\"*.xml\", \"*.properties\", \"*.yaml\", \"*.ini\", \"*.json\"],\n      \"exclude_files\" : [\"capacity-scheduler.xml\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"KNOX LDAP Password\",\n      \"description\": \"Anonymize KNOX LDAP passwords from topology configurations xml\",\n      \"rule_id\": \"XPATH\",\n      \"paths\": [\"//name[contains(text(),'Password')]/following-sibling::value[1]/text()\"],\n      \"include_files\": [\"topologies/*.xml\"],\n      \"parentNode\": \"param\",\n      \"shared\": false\n    },\n    {\n      \"name\": \"Ranger KMS Oozie Ganglia Falcon Passwords\",\n      \"description\": \"Anomymize various password related properties for multiple services. Properties are listed below\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"oozie.https.keystore.pass=([^\\\\s]*)\", \"OOZIE_HTTPS_KEYSTORE_PASS=([^\\\\s]*)\", \"ganglia_password=([^\\\\s]*)\", \"javax.jdo.option.ConnectionPassword=([^\\\\s]*)\",\"KMS_SSL_KEYSTORE_PASS=([^\\\\s]*)\",\"falcon.statestore.jdbc.password=([^\\\\s]*)\"],\n      \"extract\": \"=([^\\\\s]*)\",\n      \"include_files\": [\"java_process.txt\", \"pid.txt\", \"ambari-agent.log\", \"oozie-env.cmd\", \"hive_set_v.txt\", \"beeline_set_v.txt\", \"process_list.txt\", \"kms-env.sh\", \"statestore.credentials\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"MAC Addresses\",\n      \"description\": \"Anonymize MAC addresses like ab:12:3c:44:5d:6e from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"(([0-9a-f]{2}[:-]){5}[0-9a-f]{2})\"],\n      \"extract\": \"([0-9a-f:-]{17})\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\": true\n    },\n    {\n      \"name\":\"IPv6 Addresses\",\n      \"description\":\"Anonymize IPv6 addresses like inet6 ab10::g457:6xxx:xxxx:6c9b/64 from network_info.txt\",\n      \"rule_id\": \"Pattern\",\n      \"patterns\": [\"inet6 addr:\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\"],\n      \"extract\": \":\\\\s((([\\\\da-f:\\\\/\\\\d]))*)\",\n      \"include_files\": [\"network_info.txt\"],\n      \"shared\":true\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.['hive.password','phoenix.password','default.password','spark2.password','spark.password','psql.password','hive_interactive.password']\"],\n      \"include_files\": [\"interpreter.json\"],\n      \"shared\": false\n    },\n    {\n      \"name\": \"Zeppelin Interpreter Passwords\",\n      \"description\": \"Anonymize password related properties from zeppelin interpreter.json\",\n      \"rule_id\": \"JSONPATH\",\n      \"paths\": [\"$.interpreterSettings..properties.*[?(@.name=~/.*password.*/i)].value\"],\n      \"include_files\": [\"interpreter.json\"],\n     \"shared\": false\n    }\n  ]\n}"
      }
    }
  }, {
    "hst-agent-conf": {
      "properties_attributes": {},
      "properties": {
        "agent.loglevel": "INFO",
        "agent.tmp_dir": "/var/lib/smartsense/hst-agent/data/tmp",
        "agent.version": "1.5.0.2.7.0.0-897",
        "bundle.logs_to_capture": "(.*).log$,(.*).out$,(.*).err$",
        "security.anonymization.max.heap": "2048",
        "server.connection_retry_count": "100",
        "server.connection_retry_interval": "10",
        "upload.retry_count": "100",
        "upload.retry_interval": "15"
      }
    }
  }, {
    "hst-log4j": {
      "properties_attributes": {},
      "properties": {
        "hst-log4j-content": "\n# Copyright (c) 2011-2018, Hortonworks Inc.  All rights reserved.\n# Except as expressly permitted in a written agreement between you\n# or your company and Hortonworks, Inc, any use, reproduction,\n# modification, redistribution, sharing, lending or other exploitation\n# of all or any part of the contents of this file is strictly prohibited.\n\n# Define some default values that can be overridden by system properties\n# Root logger option\nlog4j.rootLogger=INFO,file\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{hst_log_dir}}/${log.file.name}\nlog4j.appender.file.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.file.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.analytics=org.apache.log4j.RollingFileAppender\nlog4j.appender.analytics.File={{hst_log_dir}}/analytics.log\nlog4j.appender.analytics.MaxFileSize={{hst_max_file_size}}MB\nlog4j.appender.analytics.MaxBackupIndex={{hst_max_backup_index}}\nlog4j.appender.analytics.layout=org.apache.log4j.PatternLayout\nlog4j.appender.analytics.layout.ConversionPattern=%m%n\n\n# HST logger\nlog4j.logger.com.hortonworks=INFO\ncom.github.oxo42.stateless4j=WARN\nlog4j.logger.com.sun.jersey=WARN\nlog4j.logger.org.eclipse.jetty.server=INFO\n\n# Analytics logger\nlog4j.logger.analytics=INFO,analytics\nlog4j.additivity.analytics=false",
        "hst_log_dir": "/var/log/hst",
        "hst_max_backup_index": "10",
        "hst_max_file_size": "30"
      }
    }
  }, {
    "hst-server-conf": {
      "properties_attributes": {},
      "properties": {
        "agent.request.processing.timeout": "7200",
        "agent.request.syncup.interval": "180",
        "client.threadpool.size.max": "40",
        "customer.account.name": "unspecified",
        "customer.enable.flex.subscription": "false",
        "customer.flex.subscription.id": "",
        "customer.notification.email": "unspecified",
        "customer.smartsense.id": "unspecified",
        "gateway.host": "embedded",
        "gateway.port": "9451",
        "gateway.registration.port": "9450",
        "server.max.heap": "2048",
        "server.port": "9000",
        "server.ssl_enabled": "false",
        "server.storage.dir": "/var/lib/smartsense/hst-server/data",
        "server.tmp.dir": "/var/lib/smartsense/hst-server/tmp",
        "server.url": "http://os04-14.hwx:9000"
      }
    }
  }, {
    "product-info": {
      "properties_attributes": {},
      "properties": {
        "product-info-content": "\n{\n    \"schemaVersion\" : \"1.0.0\",\n    \"productId\": \"{{stackName}}\",\n    \"componentId\": \"{{stackName}}\",\n    \"productVersion\" : \"{{stackVersion}}\",\n    \"type\":\"cluster\",\n    \"instanceInfo\": {\n        \"guid\": \"\",\n        \"parentGuid\": \"\",\n        \"name\":\"{{clusterName}}\",\n        \"flexSubscriptionId\": \"{{flexSubscriptionId}}\",\n        \"provider\": \"\",\n        \"region\": \"\"\n     }\n}"
      }
    }
  }, {
    "livy2-conf": {
      "properties_attributes": {},
      "properties": {
        "livy.environment": "production",
        "livy.impersonation.enabled": "true",
        "livy.repl.enableHiveContext": "true",
        "livy.server.csrf_protection.enabled": "true",
        "livy.server.port": "8999",
        "livy.server.recovery.mode": "recovery",
        "livy.server.recovery.state-store": "filesystem",
        "livy.server.recovery.state-store.url": "/livy2-recovery",
        "livy.server.session.timeout": "3600000",
        "livy.spark.master": "yarn-cluster"
      }
    }
  }, {
    "livy2-env": {
      "properties_attributes": {},
      "properties": {
        "content": "\n            #!/usr/bin/env bash\n\n            # - SPARK_HOME      Spark which you would like to use in livy\n            # - SPARK_CONF_DIR  Directory containing the Spark configuration to use.\n            # - HADOOP_CONF_DIR Directory containing the Hadoop / YARN configuration to use.\n            # - LIVY_LOG_DIR    Where log files are stored.  (Default: ${LIVY_HOME}/logs)\n            # - LIVY_PID_DIR    Where the pid file is stored. (Default: /tmp)\n            # - LIVY_SERVER_JAVA_OPTS  Java Opts for running livy server (You can set jvm related setting here, like jvm memory/gc algorithm and etc.)\n            export SPARK_HOME=/usr/hdp/current/spark2-client\n            export SPARK_CONF_DIR=/etc/spark2/conf\n            export JAVA_HOME={{java_home}}\n            export HADOOP_CONF_DIR=/etc/hadoop/conf\n            export LIVY_LOG_DIR={{livy2_log_dir}}\n            export LIVY_PID_DIR={{livy2_pid_dir}}\n            export LIVY_SERVER_JAVA_OPTS=\"-Xmx2g\"",
        "livy2_log_dir": "/var/log/livy2",
        "livy2_pid_dir": "/var/run/livy2",
        "spark_home": "/usr/hdp/current/spark2-client",
        "livy2_group": "livy",
        "livy2_user": "livy"
      }
    }
  }, {
    "livy2-log4j-properties": {
      "properties_attributes": {},
      "properties": {
        "content": "\n            # Set everything to be logged to the console\n            log4j.rootCategory=INFO, console\n            log4j.appender.console=org.apache.log4j.ConsoleAppender\n            log4j.appender.console.target=System.err\n            log4j.appender.console.layout=org.apache.log4j.PatternLayout\n            log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n            log4j.logger.org.eclipse.jetty=WARN"
      }
    }
  }, {
    "livy2-spark-blacklist": {
      "properties_attributes": {},
      "properties": {
        "content": "\n            #\n            # Configuration override / blacklist. Defines a list of properties that users are not allowed\n            # to override when starting Spark sessions.\n            #\n            # This file takes a list of property names (one per line). Empty lines and lines starting with \"#\"\n            # are ignored.\n            #\n\n            # Disallow overriding the master and the deploy mode.\n            spark.master\n            spark.submit.deployMode\n\n            # Disallow overriding the location of Spark cached jars.\n            spark.yarn.jar\n            spark.yarn.jars\n            spark.yarn.archive\n\n            # Don't allow users to override the RSC timeout.\n            livy.rsc.server.idle_timeout"
      }
    }
  }, {
    "spark2-defaults": {
      "properties_attributes": {},
      "properties": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.eventLog.dir": "hdfs:///spark2-history/",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraJavaOptions": "-XX:+UseNUMA",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.history.fs.cleaner.enabled": "true",
        "spark.history.fs.cleaner.interval": "7d",
        "spark.history.fs.cleaner.maxAge": "90d",
        "spark.history.fs.logDirectory": "hdfs:///spark2-history/",
        "spark.history.kerberos.keytab": "none",
        "spark.history.kerberos.principal": "none",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.history.ui.port": "18081",
        "spark.io.compression.lz4.blockSize": "128kb",
        "spark.master": "yarn",
        "spark.shuffle.file.buffer": "1m",
        "spark.shuffle.io.backLog": "8192",
        "spark.shuffle.io.serverThreads": "128",
        "spark.shuffle.unsafe.file.output.buffer": "5m",
        "spark.sql.autoBroadcastJoinThreshold": "26214400",
        "spark.sql.hive.convertMetastoreOrc": "true",
        "spark.sql.hive.metastore.jars": "/usr/hdp/current/spark2-client/standalone-metastore/*",
        "spark.sql.hive.metastore.version": "3.0",
        "spark.sql.orc.filterPushdown": "true",
        "spark.sql.orc.impl": "native",
        "spark.sql.statistics.fallBackToHdfs": "true",
        "spark.sql.warehouse.dir": "/apps/spark/warehouse",
        "spark.unsafe.sorter.spill.reader.buffer.size": "1m",
        "spark.yarn.historyServer.address": "{{spark_history_server_host}}:{{spark_history_ui_port}}",
        "spark.yarn.queue": "default"
      }
    }
  }, {
    "spark2-env": {
      "properties_attributes": {},
      "properties": {
        "content": "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512M\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"default\" #The hadoop queue to use for allocation requests (Default: default)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n{% if security_enabled %}\nexport SPARK_HISTORY_OPTS='-Dspark.ui.filters=org.apache.hadoop.security.authentication.server.AuthenticationFilter -Dspark.org.apache.hadoop.security.authentication.server.AuthenticationFilter.params=\"type=kerberos,kerberos.principal={{spnego_principal}},kerberos.keytab={{spnego_keytab}}\"'\n{% endif %}\n\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n#Memory for Master, Worker and history server (default: 1024MB)\nexport SPARK_DAEMON_MEMORY={{spark_daemon_memory}}m\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}",
        "hive_kerberos_keytab": "{{hive_kerberos_keytab}}",
        "hive_kerberos_principal": "{{hive_kerberos_principal}}",
        "spark_daemon_memory": "1024",
        "spark_log_dir": "/var/log/spark2",
        "spark_pid_dir": "/var/run/spark2",
        "spark_thrift_cmd_opts": "",
        "spark_group": "spark",
        "spark_user": "spark"
      }
    }
  }, {
    "spark2-hive-site-override": {
      "properties_attributes": {},
      "properties": {
        "hive.metastore.client.connect.retry.delay": "5",
        "hive.metastore.client.socket.timeout": "1800",
        "hive.server2.enable.doAs": "false",
        "hive.server2.thrift.http.port": "10002",
        "hive.server2.thrift.port": "10016",
        "hive.server2.transport.mode": "binary",
        "metastore.catalog.default": "spark"
      }
    }
  }, {
    "spark2-log4j-properties": {
      "properties_attributes": {},
      "properties": {
        "content": "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO"
      }
    }
  }, {
    "spark2-metrics-properties": {
      "properties_attributes": {},
      "properties": {
        "content": "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
      }
    }
  }, {
    "spark2-thrift-fairscheduler": {
      "properties_attributes": {},
      "properties": {
        "fairscheduler_content": "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
      }
    }
  }, {
    "spark2-thrift-sparkconf": {
      "properties_attributes": {},
      "properties": {
        "spark.driver.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.dynamicAllocation.enabled": "true",
        "spark.dynamicAllocation.initialExecutors": "0",
        "spark.dynamicAllocation.maxExecutors": "10",
        "spark.dynamicAllocation.minExecutors": "0",
        "spark.eventLog.dir": "{{spark_history_dir}}",
        "spark.eventLog.enabled": "true",
        "spark.executor.extraJavaOptions": "-XX:+UseNUMA",
        "spark.executor.extraLibraryPath": "{{spark_hadoop_lib_native}}",
        "spark.hadoop.cacheConf": "false",
        "spark.history.fs.cleaner.enabled": "true",
        "spark.history.fs.cleaner.interval": "7d",
        "spark.history.fs.cleaner.maxAge": "90d",
        "spark.history.fs.logDirectory": "{{spark_history_dir}}",
        "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
        "spark.io.compression.lz4.blockSize": "128kb",
        "spark.master": "{{spark_thrift_master}}",
        "spark.scheduler.allocation.file": "{{spark_conf}}/spark-thrift-fairscheduler.xml",
        "spark.scheduler.mode": "FAIR",
        "spark.shuffle.file.buffer": "1m",
        "spark.shuffle.io.backLog": "8192",
        "spark.shuffle.io.serverThreads": "128",
        "spark.shuffle.service.enabled": "true",
        "spark.shuffle.unsafe.file.output.buffer": "5m",
        "spark.sql.autoBroadcastJoinThreshold": "26214400",
        "spark.sql.hive.convertMetastoreOrc": "true",
        "spark.sql.hive.metastore.jars": "/usr/hdp/{{version}}/spark2/standalone-metastore/standalone-metastore-1.21.2.{{version}}-hive3.jar",
        "spark.sql.hive.metastore.version": "3.0",
        "spark.sql.orc.filterPushdown": "true",
        "spark.sql.orc.impl": "native",
        "spark.sql.statistics.fallBackToHdfs": "true",
        "spark.sql.warehouse.dir": "/apps/spark/warehouse",
        "spark.unsafe.sorter.spill.reader.buffer.size": "1m",
        "spark.yarn.executor.failuresValidityInterval": "2h",
        "spark.yarn.maxAppAttempts": "1",
        "spark.yarn.queue": "default"
      }
    }
  }, {
    "zeppelin-env": {
      "properties_attributes": {},
      "properties": {
        "zeppelin.executor.instances": null,
        "zeppelin.executor.mem": null,
        "zeppelin.server.kerberos.keytab": null,
        "zeppelin.server.kerberos.principal": null,
        "zeppelin.spark.jar.dir": null,
        "zeppelin_env_content": "\n      # export JAVA_HOME=\n      export JAVA_HOME={{java64_home}}\n      # export MASTER=                              # Spark master url. eg. spark://master_addr:7077. Leave empty if you want to use local mode.\n      export MASTER=yarn-client\n\n      # export ZEPPELIN_JAVA_OPTS                   # Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\"\n      # export ZEPPELIN_MEM                         # Zeppelin jvm mem options Default -Xms1024m -Xmx1024m -XX:MaxPermSize=512m\n      # export ZEPPELIN_INTP_MEM                    # zeppelin interpreter process jvm mem options. Default -Xms1024m -Xmx1024m -XX:MaxPermSize=512m\n      # export ZEPPELIN_INTP_JAVA_OPTS              # zeppelin interpreter process jvm options.\n      # export ZEPPELIN_SSL_PORT                    # ssl port (used when ssl environment variable is set to true)\n\n      # export ZEPPELIN_LOG_DIR                     # Where log files are stored.  PWD by default.\n      export ZEPPELIN_LOG_DIR={{zeppelin_log_dir}}\n      # export ZEPPELIN_PID_DIR                     # The pid files are stored. ${ZEPPELIN_HOME}/run by default.\n      export ZEPPELIN_PID_DIR={{zeppelin_pid_dir}}\n      # export ZEPPELIN_WAR_TEMPDIR                 # The location of jetty temporary directory.\n      # export ZEPPELIN_NOTEBOOK_DIR                # Where notebook saved\n      # export ZEPPELIN_NOTEBOOK_HOMESCREEN         # Id of notebook to be displayed in homescreen. ex) 2A94M5J1Z\n      # export ZEPPELIN_NOTEBOOK_HOMESCREEN_HIDE    # hide homescreen notebook from list when this value set to \"true\". default \"false\"\n      # export ZEPPELIN_NOTEBOOK_S3_BUCKET          # Bucket where notebook saved\n      # export ZEPPELIN_NOTEBOOK_S3_ENDPOINT        # Endpoint of the bucket\n      # export ZEPPELIN_NOTEBOOK_S3_USER            # User in bucket where notebook saved. For example bucket/user/notebook/2A94M5J1Z/note.json\n      # export ZEPPELIN_IDENT_STRING                # A string representing this instance of zeppelin. $USER by default.\n      # export ZEPPELIN_NICENESS                    # The scheduling priority for daemons. Defaults to 0.\n      # export ZEPPELIN_INTERPRETER_LOCALREPO       # Local repository for interpreter's additional dependency loading\n      # export ZEPPELIN_NOTEBOOK_STORAGE            # Refers to pluggable notebook storage class, can have two classes simultaneously with a sync between them (e.g. local and remote).\n      # export ZEPPELIN_NOTEBOOK_ONE_WAY_SYNC       # If there are multiple notebook storages, should we treat the first one as the only source of truth?\n      # export ZEPPELIN_NOTEBOOK_PUBLIC             # Make notebook public by default when created, private otherwise\n      export ZEPPELIN_INTP_CLASSPATH_OVERRIDES=\"{{external_dependency_conf}}\"\n      #### Spark interpreter configuration ####\n\n      ## Kerberos ticket refresh setting\n      ##\n      export KINIT_FAIL_THRESHOLD=5\n      export KERBEROS_REFRESH_INTERVAL=1d\n\n      ## Use provided spark installation ##\n      ## defining SPARK_HOME makes Zeppelin run spark interpreter process using spark-submit\n      ##\n      # export SPARK_HOME                           # (required) When it is defined, load it instead of Zeppelin embedded Spark libraries\n      # export SPARK_HOME={{spark_home}}\n      # export SPARK_SUBMIT_OPTIONS                 # (optional) extra options to pass to spark submit. eg) \"--driver-memory 512M --executor-memory 1G\".\n      # export SPARK_APP_NAME                       # (optional) The name of spark application.\n\n      ## Use embedded spark binaries ##\n      ## without SPARK_HOME defined, Zeppelin still able to run spark interpreter process using embedded spark binaries.\n      ## however, it is not encouraged when you can define SPARK_HOME\n      ##\n      # Options read in YARN client mode\n      # export HADOOP_CONF_DIR                      # yarn-site.xml is located in configuration directory in HADOOP_CONF_DIR.\n      export HADOOP_CONF_DIR=/etc/hadoop/conf\n      # Pyspark (supported with Spark 1.2.1 and above)\n      # To configure pyspark, you need to set spark distribution's path to 'spark.home' property in Interpreter setting screen in Zeppelin GUI\n      # export PYSPARK_PYTHON                       # path to the python command. must be the same path on the driver(Zeppelin) and all workers.\n      # export PYTHONPATH\n\n      ## Spark interpreter options ##\n      ##\n      # export ZEPPELIN_SPARK_USEHIVECONTEXT        # Use HiveContext instead of SQLContext if set true. true by default.\n      # export ZEPPELIN_SPARK_CONCURRENTSQL         # Execute multiple SQL concurrently if set true. false by default.\n      # export ZEPPELIN_SPARK_IMPORTIMPLICIT        # Import implicits, UDF collection, and sql if set true. true by default.\n      # export ZEPPELIN_SPARK_MAXRESULT             # Max number of Spark SQL result to display. 1000 by default.\n      # export ZEPPELIN_WEBSOCKET_MAX_TEXT_MESSAGE_SIZE       # Size in characters of the maximum text message to be received by websocket. Defaults to 1024000\n\n\n      #### HBase interpreter configuration ####\n\n      ## To connect to HBase running on a cluster, either HBASE_HOME or HBASE_CONF_DIR must be set\n\n      # export HBASE_HOME=                          # (require) Under which HBase scripts and configuration should be\n      # export HBASE_CONF_DIR=                      # (optional) Alternatively, configuration directory can be set to point to the directory that has hbase-site.xml\n\n      # export ZEPPELIN_IMPERSONATE_CMD             # Optional, when user want to run interpreter as end web user. eg) 'sudo -H -u ${ZEPPELIN_IMPERSONATE_USER} bash -c '",
        "zeppelin_log_dir": "/var/log/zeppelin",
        "zeppelin_pid_dir": "/var/run/zeppelin",
        "zeppelin_group": "zeppelin",
        "zeppelin_user": "zeppelin"
      }
    }
  }, {
    "zeppelin-log4j-properties": {
      "properties_attributes": {},
      "properties": {
        "log4j_properties_content": "\nlog4j.rootLogger = INFO, dailyfile\nlog4j.appender.stdout = org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout = org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%d{ISO8601}] ({%t} %F[%M]:%L) - %m%n\nlog4j.appender.dailyfile.DatePattern=.yyyy-MM-dd\nlog4j.appender.dailyfile.Threshold = INFO\nlog4j.appender.dailyfile = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.dailyfile.File = ${zeppelin.log.file}\nlog4j.appender.dailyfile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.dailyfile.layout.ConversionPattern=%5p [%d{ISO8601}] ({%t} %F[%M]:%L) - %m%n"
      }
    }
  }, {
    "zeppelin-shiro-ini": {
      "properties_attributes": {},
      "properties": {
        "shiro_ini_content": "\n[users]\n# List of users with their password allowed to access Zeppelin.\n# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections\nadmin = $shiro1$SHA-256$500000$p6Be9+t2hdUXJQj2D0b1fg==$bea5JIMqcVF3J6eNZGWQ/3eeDByn5iEZDuGsEip06+M=, admin\nuser1 = $shiro1$SHA-256$500000$G2ymy/qmuZnGY6or4v2KfA==$v9fabqWgCNCgechtOUqAQenGDs0OSLP28q2wolPT4wU=, role1, role2\nuser2 = $shiro1$SHA-256$500000$aHBgiuwSgAcP3Xt5mEzeFw==$KosBnN2BNKA9/KHBL0hnU/woJFl+xzJFj12NQ0fnjCU=, role3\nuser3 = $shiro1$SHA-256$500000$nf0GzH10GbYVoxa7DOlOSw==$ov/IA5W8mRWPwvAoBjNYxg3udJK0EmrVMvFCwcr9eAs=, role2\n\n# Sample LDAP configuration, for user Authentication, currently tested for single Realm\n[main]\n### A sample for configuring Active Directory Realm\n#activeDirectoryRealm = org.apache.zeppelin.realm.ActiveDirectoryGroupRealm\n#activeDirectoryRealm.systemUsername = userNameA\n\n#use either systemPassword or hadoopSecurityCredentialPath, more details in http://zeppelin.apache.org/docs/latest/security/shiroauthentication.html\n#activeDirectoryRealm.systemPassword = passwordA\n#activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://file/user/zeppelin/zeppelin.jceks\n#activeDirectoryRealm.searchBase = CN=Users,DC=SOME_GROUP,DC=COMPANY,DC=COM\n#activeDirectoryRealm.url = ldap://ldap.test.com:389\n#activeDirectoryRealm.groupRolesMap = \"CN=admin,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"admin\",\"CN=finance,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"finance\",\"CN=hr,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"hr\"\n#activeDirectoryRealm.authorizationCachingEnabled = false\n\n### A sample for configuring LDAP Directory Realm\n#ldapRealm = org.apache.zeppelin.realm.LdapGroupRealm\n## search base for ldap groups (only relevant for LdapGroupRealm):\n#ldapRealm.contextFactory.environment[ldap.searchBase] = dc=COMPANY,dc=COM\n#ldapRealm.contextFactory.url = ldap://ldap.test.com:389\n#ldapRealm.userDnTemplate = uid={0},ou=Users,dc=COMPANY,dc=COM\n#ldapRealm.contextFactory.authenticationMechanism = SIMPLE\n\n### A sample PAM configuration\n#pamRealm=org.apache.zeppelin.realm.PamRealm\n#pamRealm.service=sshd\n\n## To be commented out when not using [user] block / paintext\npasswordMatcher = org.apache.shiro.authc.credential.PasswordMatcher\niniRealm.credentialsMatcher = $passwordMatcher\n\nsessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager\n### If caching of user is required then uncomment below lines\ncacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager\nsecurityManager.cacheManager = $cacheManager\n\ncookie = org.apache.shiro.web.servlet.SimpleCookie\ncookie.name = JSESSIONID\n#Uncomment the line below when running Zeppelin-Server in HTTPS mode\n#cookie.secure = true\ncookie.httpOnly = true\nsessionManager.sessionIdCookie = $cookie\n\nsecurityManager.sessionManager = $sessionManager\n# 86,400,000 milliseconds = 24 hour\nsecurityManager.sessionManager.globalSessionTimeout = 86400000\nshiro.loginUrl = /api/login\n\n[roles]\nrole1 = *\nrole2 = *\nrole3 = *\nadmin = *\n\n[urls]\n# This section is used for url-based security.\n# You can secure interpreter, configuration and credential information by urls. Comment or uncomment the below urls that you want to hide.\n# anon means the access is anonymous.\n# authc means Form based Auth Security\n# To enfore security, comment the line below and uncomment the next one\n/api/version = anon\n#/api/interpreter/** = authc, roles[admin]\n#/api/configurations/** = authc, roles[admin]\n#/api/credential/** = authc, roles[admin]\n#/** = anon\n/** = authc"
      }
    }
  }, {
    "zeppelin-site": {
      "properties_attributes": {},
      "properties": {
        "zeppelin.anonymous.allowed": "false",
        "zeppelin.config.fs.dir": "conf",
        "zeppelin.config.storage.class": "org.apache.zeppelin.storage.FileSystemConfigStorage",
        "zeppelin.interpreter.config.upgrade": "true",
        "zeppelin.interpreter.connect.timeout": "30000",
        "zeppelin.interpreter.dir": "interpreter",
        "zeppelin.interpreter.group.order": "spark,angular,jdbc,livy,md,sh",
        "zeppelin.interpreters": "org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.angular.AngularInterpreter,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.phoenix.PhoenixInterpreter,org.apache.zeppelin.livy.LivySparkInterpreter,org.apache.zeppelin.livy.LivyPySparkInterpreter,org.apache.zeppelin.livy.LivySparkRInterpreter,org.apache.zeppelin.livy.LivySparkSQLInterpreter",
        "zeppelin.notebook.dir": "notebook",
        "zeppelin.notebook.homescreen": " ",
        "zeppelin.notebook.homescreen.hide": "false",
        "zeppelin.notebook.public": "false",
        "zeppelin.notebook.s3.bucket": "zeppelin",
        "zeppelin.notebook.s3.user": "user",
        "zeppelin.notebook.storage": "org.apache.zeppelin.notebook.repo.FileSystemNotebookRepo",
        "zeppelin.server.addr": "0.0.0.0",
        "zeppelin.server.allowed.origins": "*",
        "zeppelin.server.port": "9995",
        "zeppelin.server.ssl.port": "9995",
        "zeppelin.ssl": "false",
        "zeppelin.ssl.client.auth": "false",
        "zeppelin.ssl.key.manager.password": "change me",
        "zeppelin.ssl.keystore.password": "change me",
        "zeppelin.ssl.keystore.path": "conf/keystore",
        "zeppelin.ssl.keystore.type": "JKS",
        "zeppelin.ssl.truststore.password": "change me",
        "zeppelin.ssl.truststore.path": "conf/truststore",
        "zeppelin.ssl.truststore.type": "JKS",
        "zeppelin.websocket.max.text.message.size": "1024000"
      }
    }
  }, {
    "druid-broker": {
      "properties_attributes": {},
      "properties": {
        "druid.broker.cache.populateCache": "true",
        "druid.broker.cache.useCache": "true",
        "druid.broker.http.numConnections": "20",
        "druid.cache.sizeInBytes": "10000000",
        "druid.cache.type": "local",
        "druid.port": "8082",
        "druid.processing.buffer.sizeBytes": "536870912",
        "druid.processing.numMergeBuffers": "2",
        "druid.processing.numThreads": "3",
        "druid.server.http.numThreads": "40",
        "druid.service": "druid/broker"
      }
    }
  }, {
    "druid-common": {
      "properties_attributes": {},
      "properties": {
        "druid.indexer.logs.directory": "/user/druid/logs",
        "druid.indexer.logs.type": "hdfs",
        "database_name": "druid_14",
        "druid.discovery.curator.path": "/druid/discovery",
        "druid.emitter": "{{metric_emitter_type}}",
        "druid.emitter.ambari-metrics.eventConverter": "{\"type\":\"whiteList\"}",
        "druid.emitter.ambari-metrics.hostname": "{{metric_collector_host}}",
        "druid.emitter.ambari-metrics.port": "{{metric_collector_port}}",
        "druid.emitter.ambari-metrics.protocol": "{{metric_collector_protocol}}",
        "druid.emitter.ambari-metrics.trustStorePassword": "{{metric_truststore_password}}",
        "druid.emitter.ambari-metrics.trustStorePath": "{{metric_truststore_path}}",
        "druid.emitter.ambari-metrics.trustStoreType": "{{metric_truststore_type}}",
        "druid.extensions.loadList": "[\"druid-datasketches\", \"druid-hdfs-storage\", \"druid-kafka-indexing-service\", \"ambari-metrics-emitter\", \"mysql-metadata-storage\"]",
        "druid.extensions.pullList": "[]",
        "druid.extensions.repositoryList": "[]",
        "druid.hadoop.security.kerberos.keytab": null,
        "druid.hadoop.security.kerberos.principal": null,
        "druid.indexer.task.restoreTasksOnRestart": "true",
        "druid.metadata.storage.connector.connectURI": "jdbc:mysql://db.hwx:3306/druid_14?createDatabaseIfNotExist=true",
        "druid.metadata.storage.connector.password": "hortonworks",
        "druid.metadata.storage.connector.port": "3306",
        "druid.metadata.storage.connector.user": "root",
        "druid.metadata.storage.type": "mysql",
        "druid.monitoring.monitors": "[\"io.druid.java.util.metrics.JvmMonitor\"]",
        "druid.security.extensions.loadList": "[]",
        "druid.storage.storageDirectory": "/apps/druid/warehouse",
        "druid.storage.type": "hdfs",
        "druid.zk.paths.base": "/druid",
        "druid.zk.service.host": "os05-14.hwx:2181,os07-14.hwx:2181,os06-14.hwx:2181",
        "metastore_hostname": "db.hwx"
      }
    }
  }, {
    "druid-coordinator": {
      "properties_attributes": {},
      "properties": {
        "druid.coordinator.merge.on": "false",
        "druid.port": "8081",
        "druid.service": "druid/coordinator"
      }
    }
  }, {
    "druid-env": {
      "properties_attributes": {},
      "properties": {
        "content": "\n      #!/bin/bash\n\n      # Set DRUID specific environment variables here.\n\n      # The java implementation to use.\n      export JAVA_HOME={{java8_home}}\n      export PATH=$JAVA_HOME/bin:$PATH\n      export DRUID_PID_DIR={{druid_pid_dir}}\n      export DRUID_LOG_DIR={{druid_log_dir}}\n      export DRUID_CONF_DIR={{druid_conf_dir}}\n      export DRUID_LIB_DIR={{druid_home}}/lib\n      export HADOOP_CONF_DIR={{hadoop_conf_dir}}",
        "druid.broker.jvm.direct.memory": "1048576",
        "druid.broker.jvm.heap.memory": "2048",
        "druid.broker.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/broker.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/broker.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.coordinator.jvm.direct.memory": "1048576",
        "druid.coordinator.jvm.heap.memory": "512",
        "druid.coordinator.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/coordinator.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/coordinator.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.historical.jvm.direct.memory": "1048576",
        "druid.historical.jvm.heap.memory": "2048",
        "druid.historical.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/historical.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/historical.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.middlemanager.jvm.direct.memory": "1048576",
        "druid.middlemanager.jvm.heap.memory": "256",
        "druid.middlemanager.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/middlemanager.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/middlemanager.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.overlord.jvm.direct.memory": "1048576",
        "druid.overlord.jvm.heap.memory": "512",
        "druid.overlord.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/overlord.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/overlord.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.router.jvm.direct.memory": "1048576",
        "druid.router.jvm.heap.memory": "512",
        "druid.router.jvm.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dorg.jboss.logging.provider=slf4j -Dnet.spy.log.LoggerImpl=net.spy.memcached.compat.log.SLF4JLogger -Dlog4j.shutdownCallbackRegistry=io.druid.common.config.Log4jShutdown -Dlog4j.shutdownHookEnabled=true -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -Xloggc:/var/logs/druid/router.gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=50 -XX:GCLogFileSize=10m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/logs/druid/router.hprof -Djava.security.auth.login.config={druid_jaas_file}",
        "druid_log_dir": "/var/log/druid",
        "druid_pid_dir": "/var/run/druid",
        "druid_user": "druid"
      }
    }
  }, {
    "druid-historical": {
      "properties_attributes": {},
      "properties": {
        "druid.port": "8083",
        "druid.processing.buffer.sizeBytes": "536870912",
        "druid.processing.numMergeBuffers": "2",
        "druid.processing.numThreads": "7",
        "druid.segmentCache.infoDir": "/apps/druid/segmentCache/info_dir",
        "druid.segmentCache.locations": "[{\"path\":\"/apps/druid/segmentCache\",\"maxSize\":300000000000}]",
        "druid.server.http.numThreads": "40",
        "druid.server.maxSize": "300000000000",
        "druid.service": "druid/historical"
      }
    }
  }, {
    "druid-log4j": {
      "properties_attributes": {},
      "properties": {
        "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n    <Configuration>\n        <Appenders>\n            <Console name=\"Console\" target=\"SYSTEM_OUT\">\n                <PatternLayout pattern=\"%d{ISO8601} %p [%t] %c - %m%n\"/>\n            </Console>\n        </Appenders>\n        <Loggers>\n            <Logger name=\"com.metamx\" level=\"{{metamx_log_level}}\"/>\n            <Logger name=\"io.druid\" level=\"{{druid_log_level}}\"/>\n            <Root level=\"{{root_log_level}}\">\n                <AppenderRef ref=\"Console\"/>\n            </Root>\n        </Loggers>\n    </Configuration>",
        "druid_log_level": "info",
        "metamx_log_level": "info",
        "root_log_level": "WARN"
      }
    }
  }, {
    "druid-logrotate": {
      "properties_attributes": {},
      "properties": {
        "content": "\n    {{druid_log_dir}}/*.log {\n        copytruncate\n        rotate {{druid_log_maxbackupindex}}\n        daily\n        nocompress\n        missingok\n        notifempty\n        create 660 druid users\n        dateext\n        dateformat -%Y-%m-%d-%s\n        size {{druid_log_maxfilesize}}M\n        }",
        "druid_log_maxbackupindex": "7",
        "druid_log_maxfilesize": "10"
      }
    }
  }, {
    "druid-middlemanager": {
      "properties_attributes": {},
      "properties": {
        "druid.indexer.fork.property.hadoop.mapreduce.map.java.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8",
        "druid.indexer.fork.property.hadoop.mapreduce.reduce.java.opts": "-Duser.timezone=UTC -Dfile.encoding=UTF-8",
        "druid.indexer.runner.javaOpts": "-server -Xmx2g -Duser.timezone=UTC -Dfile.encoding=UTF-8 -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager -Dhdp.version={stack_version} -Dhadoop.mapreduce.job.classloader=true -Djava.security.auth.login.config={druid_jaas_file}",
        "druid.indexer.runner.startPort": "8100",
        "druid.indexer.task.baseTaskDir": "/apps/druid/tasks",
        "druid.indexer.task.hadoopWorkingPath": "/tmp/druid-indexing",
        "druid.port": "8091",
        "druid.processing.buffer.sizeBytes": "256000000",
        "druid.processing.numThreads": "2",
        "druid.server.http.numThreads": "50",
        "druid.service": "druid/middlemanager",
        "druid.worker.capacity": "3"
      }
    }
  }, {
    "druid-overlord": {
      "properties_attributes": {},
      "properties": {
        "druid.indexer.runner.type": "remote",
        "druid.indexer.storage.type": "metadata",
        "druid.port": "8090",
        "druid.service": "druid/overlord"
      }
    }
  }, {
    "druid-router": {
      "properties_attributes": {},
      "properties": {
        "druid.port": "8888",
        "druid.router.http.numConnections": "20",
        "druid.router.tierToBrokerMap": "{\"_default_tier\":\"druid/broker\"}",
        "druid.server.http.numThreads": "50",
        "druid.service": "druid/router"
      }
    }
  }, {
    "superset-env": {
      "properties_attributes": {},
      "properties": {
        "content": "\n      # Set environment variables here.\n      \n      export LC_ALL=en_US.UTF-8\n      export LANG=en_US.UTF-8\n\n      # Superset Home Dir\n      export SUPERSET_CONFIG_DIR={{superset_config_dir}}\n\n      # Superset Log Dir\n      export SUPERSET_LOG_DIR={{superset_log_dir}}\n\n      # Superset Log Dir\n      export SUPERSET_BIN_DIR={{superset_bin_dir}}\n\n      # Superset PID Dir\n      export SUPERSET_PID_DIR={{superset_pid_dir}}\n\n      # Add superset_config.py to PYTHONPATH\n      export PYTHONPATH=$PYTHONPATH:{{superset_config_dir}}\n\n      export SUPERSET_WEBSERVER_PORT={{superset_webserver_port}}\n      export SUPERSET_WEBSERVER_ADDRESS={{superset_webserver_address}}\n      export SUPERSET_TIMEOUT={{superset_timeout}}\n      export SUPERSET_WORKERS={{superset_workers}}",
        "superset_admin_email": "unspecified",
        "superset_admin_firstname": "unspecified",
        "superset_admin_lastname": "unspecified",
        "superset_admin_password": "hortonworks",
        "superset_admin_user": "admin",
        "superset_log_dir": "/var/log/superset",
        "superset_pid_dir": "/var/run/superset",
        "superset_user": "superset"
      }
    }
  }, {
    "superset": {
      "properties_attributes": {},
      "properties": {
        "ENABLE_PROXY_FIX": "True",
        "MAPBOX_API_KEY": "",
        "ROW_LIMIT": "5000",
        "SECRET_KEY": "hortonworks",
        "SUPERSET_DATABASE_HOSTNAME": "db.hwx",
        "SUPERSET_DATABASE_NAME": "superset_14",
        "SUPERSET_DATABASE_PASSWORD": "hortonworks",
        "SUPERSET_DATABASE_PORT": "3306",
        "SUPERSET_DATABASE_TYPE": "mysql",
        "SUPERSET_DATABASE_USER": "root",
        "SUPERSET_TIMEOUT": "60",
        "SUPERSET_WEBSERVER_ADDRESS": "0.0.0.0",
        "SUPERSET_WEBSERVER_PORT": "9088",
        "SUPERSET_WORKERS": "4",
        "WTF_CSRF_ENABLED": "True"
      }
    }
  }],
  "host_groups": [{
    "name": "host_group_0",
    "components": [{
      "name": "NAMENODE"
    }, {
      "name": "RESOURCEMANAGER"
    }, {
      "name": "ACTIVITY_ANALYZER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_1",
    "components": [{
      "name": "SECONDARY_NAMENODE"
    }, {
      "name": "YARN_REGISTRY_DNS"
    }, {
      "name": "APP_TIMELINE_SERVER"
    }, {
      "name": "TIMELINE_READER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_2",
    "components": [{
      "name": "HISTORYSERVER"
    }, {
      "name": "HIVE_METASTORE"
    }, {
      "name": "HIVE_SERVER"
    }, {
      "name": "HBASE_MASTER"
    }, {
      "name": "OOZIE_SERVER"
    }, {
      "name": "INFRA_SOLR"
    }, {
      "name": "METRICS_GRAFANA"
    }, {
      "name": "RANGER_ADMIN"
    }, {
      "name": "RANGER_USERSYNC"
    }, {
      "name": "RANGER_KMS_SERVER"
    }, {
      "name": "HST_SERVER"
    }, {
      "name": "ACTIVITY_EXPLORER"
    }, {
      "name": "DRUID_OVERLORD"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_3",
    "components": [{
      "name": "ZOOKEEPER_SERVER"
    }, {
      "name": "METRICS_COLLECTOR"
    }, {
      "name": "ATLAS_SERVER"
    }, {
      "name": "KAFKA_BROKER"
    }, {
      "name": "LOGSEARCH_SERVER"
    }, {
      "name": "ACTIVITY_ANALYZER"
    }, {
      "name": "SPARK2_JOBHISTORYSERVER"
    }, {
      "name": "DRUID_COORDINATOR"
    }, {
      "name": "DRUID_BROKER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_4",
    "components": [{
      "name": "ZOOKEEPER_SERVER"
    }, {
      "name": "KAFKA_BROKER"
    }, {
      "name": "DRUID_BROKER"
    }, {
      "name": "PHOENIX_QUERY_SERVER"
    }, {
      "name": "LIVY2_SERVER"
    }, {
      "name": "SPARK2_THRIFTSERVER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_5",
    "components": [{
      "name": "ZOOKEEPER_SERVER"
    }, {
      "name": "KAFKA_BROKER"
    }, {
      "name": "KNOX_GATEWAY"
    }, {
      "name": "ZEPPELIN_MASTER"
    }, {
      "name": "SUPERSET"
    }, {
      "name": "DRUID_ROUTER"
    }, {
      "name": "PHOENIX_QUERY_SERVER"
    }, {
      "name": "RANGER_TAGSYNC"
    }, {
      "name": "LIVY2_SERVER"
    }, {
      "name": "SPARK2_THRIFTSERVER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "1"
  }, {
    "name": "host_group_6",
    "components": [{
      "name": "DATANODE"
    }, {
      "name": "NODEMANAGER"
    }, {
      "name": "DRUID_HISTORICAL"
    }, {
      "name": "DRUID_MIDDLEMANAGER"
    }, {
      "name": "HDFS_CLIENT"
    }, {
      "name": "YARN_CLIENT"
    }, {
      "name": "MAPREDUCE2_CLIENT"
    }, {
      "name": "TEZ_CLIENT"
    }, {
      "name": "HIVE_CLIENT"
    }, {
      "name": "HBASE_CLIENT"
    }, {
      "name": "PIG"
    }, {
      "name": "SQOOP"
    }, {
      "name": "OOZIE_CLIENT"
    }, {
      "name": "ZOOKEEPER_CLIENT"
    }, {
      "name": "INFRA_SOLR_CLIENT"
    }, {
      "name": "ATLAS_CLIENT"
    }, {
      "name": "SPARK2_CLIENT"
    }],
    "cardinality": "2"
  }, {
    "name": "host_group_7",
    "components": [{
      "name": "DATANODE"
    }, {
      "name": "NODEMANAGER"
    }, {
      "name": "HBASE_REGIONSERVER"
    }, {
      "name": "DRUID_HISTORICAL"
    }, {
      "name": "DRUID_MIDDLEMANAGER"
    }],
    "cardinality": "4"
  }, {
    "name": "host_group_8",
    "components": [{
      "name": "DATANODE"
    }, {
      "name": "NODEMANAGER"
    }, {
      "name": "DRUID_HISTORICAL"
    }, {
      "name": "DRUID_MIDDLEMANAGER"
    }],
    "cardinality": "4"
  }],
  "settings": [{
      "deployment_settings": [{
        "skip_failure": "true"
      }]
    },
    {
      "recovery_settings": [{
        "recovery_enabled": "true"
      }]
    }
  ],
  "Blueprints": {
    "blueprint_name": "DK_FULL",
    "stack_name": "HDP",
    "stack_version": "3.0"
  }
}
